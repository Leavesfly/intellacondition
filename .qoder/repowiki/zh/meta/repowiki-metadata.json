{"knowledge_relations":[{"id":1417,"source_id":"535eb666-ebcd-4ba5-acce-b163e70f93bc","target_id":"651196e7-1cdd-43cd-9da3-b59a58810957","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 535eb666-ebcd-4ba5-acce-b163e70f93bc -\u003e 651196e7-1cdd-43cd-9da3-b59a58810957","gmt_create":"2025-09-23T18:30:33.014405+08:00","gmt_modified":"2025-09-23T18:30:33.014405+08:00"},{"id":1418,"source_id":"535eb666-ebcd-4ba5-acce-b163e70f93bc","target_id":"4ab5185c-ec5e-450f-b61d-4f861113ad26","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 535eb666-ebcd-4ba5-acce-b163e70f93bc -\u003e 4ab5185c-ec5e-450f-b61d-4f861113ad26","gmt_create":"2025-09-23T18:30:33.016184+08:00","gmt_modified":"2025-09-23T18:30:33.016184+08:00"},{"id":1419,"source_id":"535eb666-ebcd-4ba5-acce-b163e70f93bc","target_id":"8db294c9-b007-4d44-aea1-9cfc3cebf353","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 535eb666-ebcd-4ba5-acce-b163e70f93bc -\u003e 8db294c9-b007-4d44-aea1-9cfc3cebf353","gmt_create":"2025-09-23T18:30:33.01689+08:00","gmt_modified":"2025-09-23T18:30:33.01689+08:00"},{"id":1420,"source_id":"535eb666-ebcd-4ba5-acce-b163e70f93bc","target_id":"4989d826-7873-4c94-905a-aef62b629798","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 535eb666-ebcd-4ba5-acce-b163e70f93bc -\u003e 4989d826-7873-4c94-905a-aef62b629798","gmt_create":"2025-09-23T18:30:33.017762+08:00","gmt_modified":"2025-09-23T18:30:33.017762+08:00"},{"id":1421,"source_id":"d15ea3fa-f3f9-45a3-aad9-963fc9a2b78a","target_id":"ece7b0a9-8bac-490e-882c-f6708aebba51","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d15ea3fa-f3f9-45a3-aad9-963fc9a2b78a -\u003e ece7b0a9-8bac-490e-882c-f6708aebba51","gmt_create":"2025-09-23T18:30:33.018787+08:00","gmt_modified":"2025-09-23T18:30:33.018787+08:00"},{"id":1422,"source_id":"d15ea3fa-f3f9-45a3-aad9-963fc9a2b78a","target_id":"428b387d-a87d-4210-8256-c13203deebe0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d15ea3fa-f3f9-45a3-aad9-963fc9a2b78a -\u003e 428b387d-a87d-4210-8256-c13203deebe0","gmt_create":"2025-09-23T18:30:33.019949+08:00","gmt_modified":"2025-09-23T18:30:33.019949+08:00"},{"id":1423,"source_id":"d15ea3fa-f3f9-45a3-aad9-963fc9a2b78a","target_id":"2110d804-2df6-45f9-ae68-dc558cfc18ad","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d15ea3fa-f3f9-45a3-aad9-963fc9a2b78a -\u003e 2110d804-2df6-45f9-ae68-dc558cfc18ad","gmt_create":"2025-09-23T18:30:33.021074+08:00","gmt_modified":"2025-09-23T18:30:33.021074+08:00"},{"id":1424,"source_id":"d15ea3fa-f3f9-45a3-aad9-963fc9a2b78a","target_id":"d30964cd-5211-4ee1-b229-ab7345347dd4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d15ea3fa-f3f9-45a3-aad9-963fc9a2b78a -\u003e d30964cd-5211-4ee1-b229-ab7345347dd4","gmt_create":"2025-09-23T18:30:33.021947+08:00","gmt_modified":"2025-09-23T18:30:33.021947+08:00"},{"id":1425,"source_id":"d15ea3fa-f3f9-45a3-aad9-963fc9a2b78a","target_id":"4fdd7c62-2260-464b-8112-2bee4b12467f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d15ea3fa-f3f9-45a3-aad9-963fc9a2b78a -\u003e 4fdd7c62-2260-464b-8112-2bee4b12467f","gmt_create":"2025-09-23T18:30:33.024227+08:00","gmt_modified":"2025-09-23T18:30:33.024227+08:00"},{"id":1426,"source_id":"976eed39-7358-4f4f-8844-b25950402d6b","target_id":"6c58de01-a415-4504-b669-764e847903a0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 976eed39-7358-4f4f-8844-b25950402d6b -\u003e 6c58de01-a415-4504-b669-764e847903a0","gmt_create":"2025-09-23T18:30:33.025281+08:00","gmt_modified":"2025-09-23T18:30:33.025281+08:00"},{"id":1427,"source_id":"976eed39-7358-4f4f-8844-b25950402d6b","target_id":"bf5db87d-9b47-4de3-8a53-f9d7fc54d536","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 976eed39-7358-4f4f-8844-b25950402d6b -\u003e bf5db87d-9b47-4de3-8a53-f9d7fc54d536","gmt_create":"2025-09-23T18:30:33.026593+08:00","gmt_modified":"2025-09-23T18:30:33.026593+08:00"},{"id":1428,"source_id":"976eed39-7358-4f4f-8844-b25950402d6b","target_id":"099a0c24-2dce-4a4f-be85-a3f87265d69f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 976eed39-7358-4f4f-8844-b25950402d6b -\u003e 099a0c24-2dce-4a4f-be85-a3f87265d69f","gmt_create":"2025-09-23T18:30:33.027209+08:00","gmt_modified":"2025-09-23T18:30:33.027209+08:00"},{"id":1429,"source_id":"651196e7-1cdd-43cd-9da3-b59a58810957","target_id":"db04fba3-f7ec-4ede-8124-75be4d0765d4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 651196e7-1cdd-43cd-9da3-b59a58810957 -\u003e db04fba3-f7ec-4ede-8124-75be4d0765d4","gmt_create":"2025-09-23T18:30:33.027926+08:00","gmt_modified":"2025-09-23T18:30:33.027926+08:00"},{"id":1430,"source_id":"651196e7-1cdd-43cd-9da3-b59a58810957","target_id":"49bfc293-9c86-41ff-ad1c-dc0a4ae84363","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 651196e7-1cdd-43cd-9da3-b59a58810957 -\u003e 49bfc293-9c86-41ff-ad1c-dc0a4ae84363","gmt_create":"2025-09-23T18:30:33.029348+08:00","gmt_modified":"2025-09-23T18:30:33.029348+08:00"},{"id":1431,"source_id":"651196e7-1cdd-43cd-9da3-b59a58810957","target_id":"ac212019-e03d-42bd-8d4b-2389d24fd6a0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 651196e7-1cdd-43cd-9da3-b59a58810957 -\u003e ac212019-e03d-42bd-8d4b-2389d24fd6a0","gmt_create":"2025-09-23T18:30:33.030012+08:00","gmt_modified":"2025-09-23T18:30:33.030012+08:00"},{"id":1432,"source_id":"4ab5185c-ec5e-450f-b61d-4f861113ad26","target_id":"dabd0af7-ee0c-46e1-b419-f528934110a9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4ab5185c-ec5e-450f-b61d-4f861113ad26 -\u003e dabd0af7-ee0c-46e1-b419-f528934110a9","gmt_create":"2025-09-23T18:30:33.033379+08:00","gmt_modified":"2025-09-23T18:30:33.033379+08:00"},{"id":1433,"source_id":"4ab5185c-ec5e-450f-b61d-4f861113ad26","target_id":"3f8cc628-b519-4549-a7ff-e7ee92b4cb5d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4ab5185c-ec5e-450f-b61d-4f861113ad26 -\u003e 3f8cc628-b519-4549-a7ff-e7ee92b4cb5d","gmt_create":"2025-09-23T18:30:33.034436+08:00","gmt_modified":"2025-09-23T18:30:33.034436+08:00"},{"id":1434,"source_id":"4ab5185c-ec5e-450f-b61d-4f861113ad26","target_id":"d913dbbe-a272-4e3c-af63-e264b64f15d5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4ab5185c-ec5e-450f-b61d-4f861113ad26 -\u003e d913dbbe-a272-4e3c-af63-e264b64f15d5","gmt_create":"2025-09-23T18:30:33.035008+08:00","gmt_modified":"2025-09-23T18:30:33.035008+08:00"},{"id":1435,"source_id":"49bfc293-9c86-41ff-ad1c-dc0a4ae84363","target_id":"e01742c1-b5c5-4b69-ae79-58d2ba52bc44","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 49bfc293-9c86-41ff-ad1c-dc0a4ae84363 -\u003e e01742c1-b5c5-4b69-ae79-58d2ba52bc44","gmt_create":"2025-09-23T18:30:33.035863+08:00","gmt_modified":"2025-09-23T18:30:33.035864+08:00"},{"id":1436,"source_id":"49bfc293-9c86-41ff-ad1c-dc0a4ae84363","target_id":"cfb81756-6907-49e5-b0a6-e8d29638fc38","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 49bfc293-9c86-41ff-ad1c-dc0a4ae84363 -\u003e cfb81756-6907-49e5-b0a6-e8d29638fc38","gmt_create":"2025-09-23T18:30:33.036689+08:00","gmt_modified":"2025-09-23T18:30:33.03669+08:00"},{"id":1437,"source_id":"49bfc293-9c86-41ff-ad1c-dc0a4ae84363","target_id":"d23f5ca5-9f53-487c-a7d5-ebf788ba02b9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 49bfc293-9c86-41ff-ad1c-dc0a4ae84363 -\u003e d23f5ca5-9f53-487c-a7d5-ebf788ba02b9","gmt_create":"2025-09-23T18:30:33.037313+08:00","gmt_modified":"2025-09-23T18:30:33.037313+08:00"}],"wiki_catalogs":[{"id":"acfa451c-fcf7-4d4e-a1f6-174ed41b9230","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"项目概述","description":"project-overview","prompt":"创建关于智能空调仿真平台（intellacondition）的全面内容，重点介绍其核心目标、技术架构和目标用户。解释该项目作为一个基于Java的后端应用，旨在通过机器学习与优化算法实现空调功率调度的智能化，提升用户舒适度并降低能耗。描述系统整体流程：训练阶段（数据收集与模型训练）、调度阶段（PSO算法优化调度）和展示阶段（结果输出）。结合IntelliAirCondition主类的main方法流程，说明各模块如何协同工作。为初学者提供概念性引导，如粒子群优化(PSO)、BP神经网络、功率-温度拟合函数等；同时为高级开发者提供系统设计细节，如单例模式的DataFactory、策略模式的PtTrainer接口等。包含典型使用场景示例，并指出系统依赖的关键第三方库（Weka、Lucene、JFreeChart）。","parent_id":"","order":0,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/IntelliAirCondition.java,README.md","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:09:28.949777+08:00","gmt_modified":"2025-09-23T18:12:39.242889+08:00","raw_data":"WikiEncrypted:0MI1/XkBoMl0lTbK6t0Cn/+8FdvqrJ62ianMLvZj02elJtBUgH0Ns0veIx1WPtM9wwkxI+/XAqHLxJLlHB8wV8wzXx3Ru259gZ3iulwB98anozfG4dtPBZ8sLshFXAlXsfqdXjK8dCGVtUFU34GmCp8BhgqPC5y+AXGwX66TvIWzjn3/U71O+aeEFQ9meYOyf8quzphSjQgCPHRNQbR5W6JHM3KHv5YcMxp5EBztO/8hn+BDVuYIK938CpE5A0WXquH77RwsHuHBd35M7Ia1xK4wR/hp23q0buRrOxnoJciHEQbI0uAaXzT/EsC424fVoL5Dr/HikaSahiGrUQ9fFwcrogU2CGYfIlc9NHEVssIURH2lcx1oK4Ez0/4uiHy9sTWBK4t7wegNxVmKl1x88fohm6ktAjqYfzpNZvaENQBVMiJiZ1vkZDGk0DRUo2Fwfjdw9P5IjAUznfoO/R3d0VJlE28U30byHcJwSSgI3ST4MoX+++Ojsp2J676JmD5qEktwGRv8+rjQVmASJw7I0BmlSb+b/+zKE4TM1zIFgkhwYHgCocV5ViG+vmQVjJE5iWlQDp4yZRI0p7c+GqfjHak4kHFb0k2m39VdEqdp5v3a0pL3tAOzqimUtzgq4Z2ytnAu4nW+NbsnPhnNgcY2G5b4Hw2LULxTzEvlgOlkJaZ4RxNqMXChDGdHoXvfpeOrYN9cJehwTJfuskKy3CnjxYXrxT2Sqfq1ses00zQW+w+NtHLFVBlIKbGHoVrfCGaWK6UgBAsyZAEwDAY57T8mQQBOTO8+OYoK10a7vFjnMK8oruazMWsuDiIL4gd+9d/dH3nmhTtCUeShZ9dJdL6vZq/phsnEw7ezgiLY1XfWISdUL3PosrJglk0Y8wHjXYHEkGa5Vdy3d+YY91XFYeRDdCgWHgIFH9OVMHg6KeDM2QBDVbRfmwhfhwP+zMqg1+nLW5y5bpSm6kqmHdAMOsk4Sj0fumuuSroA/aV+c9iZi+BuFCwUhxVBAPDSpbtAkcXcgw+46BJtiymicJNU/+Jd1ocLPuzzduSg2vv46YXG+sewyxplSqc5woMRCmjxCX9cx5YfBpX6eAui/c9fH2IoCVfh1BqhMtFONAGV7ZYzzf3vzPddBtYj7SPdW16Uohd5jDbBbH6qlnyVYz0uuRXcD2sKYCfLbIFja/P+A50xnu1DKHxayjgX/aqGY/TCMprdRTvCDvPYJF9XwGV77qz2SVn5JFHY5eXK4VK20ilEDbWyl5s8GJ/OYUKqLYOrBP+UtBQSaAuf73s/HRFMwy6FaFYphzQHYbiP5ayc60IbYANKfF/loUIPgSyMbhP93GTxQzhcXFX50mqz4VymsSHqopHlFA+ZWEk6BrtujAOLkK1sWAj6cn53vcTKDs0De+3KUjhcM8Z+HQbsDzyznPCylxurHNDe9hSWTzoERMuKj7isKAmpdx6SZR/OrhCt3SAmsdGUkQDMEBqY8gMFIuQV0ruOFIoeot/iZEGoQBEKBqqUMM+dnbCpIdCUzS1VpuycWEmrlb5gJ5As53fj6JH+lUgLxqheTM/GmdB+qKmAwyXW0gVA6YtIjaAtMexcyFD8XnN1HNMaYmOFuMIJGfPCUA==","layer_level":0},{"id":"f94db6f3-256a-4184-b208-ab2dae03811d","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"应用上下文配置","description":"app_context_config","prompt":"创建详尽的应用上下文配置文档，解析AppContextConstant类中定义的所有系统级常量。详细说明区域尺寸（AREA_LENGTH和AREA_WITCH）、用户/传感器/空调数量（USER_NUM、SENSOR_NUM、AIR_CONDITION_NUM）等基础参数的物理意义及其对仿真环境的影响。解释各类数据文件路径配置（如USER_COMFORT_TEMP_DATA_FILE_NAME、SENSOR_GEO_TABLE_FILE_NAME等）的用途和文件格式要求。阐述用户舒适度相关参数（COMFORT_MIN_VALUE、COMFORT_UP_DOWN_RANGE_VALUE）的设定逻辑。重点分析动态计算的MAX_DISTANCE值的数学公式及其在传感器布局中的作用。说明满意度与功耗成本的权重分配机制（SATISFY_WEIGHT、POWER_COST_WEIGHT）以及电费单价（POWER_PRICE）如何影响最终评估结果。描述空调运行边界条件（OUTSIDE_TEMP、AIR_CONDITION_MIN/MAX_TEMP、AIR_CONDITION_MIN/MAX_POWER）的工程依据，并解释POWER_UTILITY_UNIT等辅助常量的使用场景。提供调整这些参数的实际案例，说明其对仿真结果的敏感性。","parent_id":"f19da748-27d0-49a5-8591-9fa53f411bb2","order":0,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/config/AppContextConstant.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:10:01.657378+08:00","gmt_modified":"2025-09-23T18:19:42.423348+08:00","raw_data":"WikiEncrypted:+R36tW+L9V8zcdlPHbMGAtw0uDIP+RKNn6LCeu+xHrpCjttjWfC/sdJT5EfHRGNDBeHTsum56tn7MdI2JltJKy5R070ZakdU1lBxLTdSCHqgFkbt1FKCOZonbsZFYclWpfL5uqbIHBeavIydMMXZleN6hfulWFkYOB6iMqFuREkeqXpUD6/C/TiF9LbD0sp4T97Shb2B1DH6UR2PHVbJunwxiat5s4n451aqQPpjCUs76lysKcCQzP3JnUS2q5+HtWgo1OQNERlL82i1dek6t1ibwfxBMYAGLjonjOnwdB9vnhDCMYVPMOu4IJkfd0R5WFjbOHY/S1Nem6YK1wmrwNumEziZdYm8mfKUeYbgUVYYn2jnuF3in32BDfhyQt76AbhvDUYvTNzO4qWeqm0fn99U1G/aR0Ph9tDVgCQdygM45zjX1kk+VRAcukhYkxILeQIIcZD2wJU/lIunERhrJNlU5QfkyfvAmg6vIHd4hS/OadgfU7kkvjsbsVKLMbCi1S7hgf3B0V+1coHk4ZvYBhoWltcy1dWrJF7gTyu9YiO0O6UajP0Jb7RE9airjwz2v65VGWo0MLRY21eVmkkYRX3mzs2z+DjRrkamXhCSkkRP3L6wEmoABeBkq5nlv4P/1g2XSLqpVqFRxpnlk4HBDVR38rBOvOooZEyvZq9D3LjM73SkanlRNgUm9Oio5MKtAiUOTMxEwv1QmU/3cjf64IMo2jHJKTkmuObVI2rYwjCt/MbHkK9Li4h93YlSfr/LpWYnI+nvKPgpBER49XIRB48Fu1cJ/YZHiO3/tnsTT12KL6uz49QekxoqOKhY8BqKj614ORuX0zFr37N8vnAEjLPL7PqHZA0qci6Q8l5hymj/31CQHHfAScx7x2D/ya5HX7QchqiXcqpuW3InqHpRIYqT6KEusAyV1uvOBqDI87dAHhEOWN/f1BISHIDdkNvTJJQjs8hIW/TPTszYbTZwAIuSCruxkD/KugM9DiiN2W6djTEis7IKKBFCnL8SAjfKwpY/nYZYijA3V8B7AuMXSXf1cFZi5q/Zoj48ua6b5sPTYsGgcYCygWFK+gvePHsmAJ1D9uzQijrgsPw9DKWRDJYtUjfPBnyzE4LqZrl/xOpbIaFHbQZaoIS36sJc+l/SM8Hd7ewYNGIhbS+tQbcMb1851jUNSfFg1oEKCm4IWIgIJ8+yzcl0iA/ePtejkzS7ih6hYB53geze6Z3SMEgRx2rikhaBY/YMdXfjj96m5p/xMCQP5MNkjIsKx0MPTVDyZ85ypdwf/4sgcroNo56lKkUVtOVpiby8ZnWjLHT/ZJ5f4KLVsJewPdg2gHzpalGgFTKibkstIYJBbjTgA1rd5ZzDnBxqOjerE5saCl3h3ZpQNSGfoNQc7bt1gegiZ8tdz4xriUfbSDOsbgFaHhgTrmrUnxWp71sAD3eRKtjsArO69g4fX43yiTfayAJUW8gHu8dVC9zVVErqNVxQN92df7Y07yN4ZWE5+48nVHwSVhDWdDNZv+/8N0H2vtI280z2y/8ZMSdVG/glk89p5aXoGsKwDlEB6gjsmNIWtUi1LU25HEVmklPmkQW2CuBFKFqPWg3oGiiR6/XJ0Vz7f4nxbkejV7NPlCE9DiNZUK6MtEiLOeAcdJaituwuX0BRkLhBCydnzWV0Qgc2pCAONCRwdgQxDMLV5nqrrHFjnXF7yV48PhC567CQlhoBMvDuijNUsR6jWHOaLfaqcAQnluOfpwWLfUg841M24q6KXc4IV0PKmi/zuy4Mxdj6dTCdALot6r95zDorhR4b40Vgz4+M0XAsfXi/QZMghPGMudNALgpJUyQw8BVJIcQaHzATonKlXFlFumhvhGjIKUCCqDOHosbqNRIIDKvsVtPSAl8EvFY=","layer_level":1},{"id":"99e671a1-2349-49ee-a8d9-5c00a13c6a68","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"训练模块","description":"training-module","prompt":"深入开发训练模块的详细内容，重点围绕PtTrainer接口及其多线程实现PtMultiThreadTrainer。解释如何通过DataCollecter从资源文件中收集历史功率-温度数据，并使用TrainDataSetManagerInLucene进行高效存储与检索。详细说明buildFitFuncSet方法如何基于指定室外温度为每个传感器节点训练功率-温度拟合函数（PtFitFunc），并支持BP神经网络和线性回归两种算法模型。结合代码示例展示训练流程的调用链：IntelliAirCondition.trainPhase() → PtTrainer.buildFitFuncSet() → 具体模型训练任务。阐述Weka框架在BP神经网络训练中的集成方式，以及Lucene在大规模训练数据管理中的作用。提供配置参数说明和常见训练问题的排查方法，如数据缺失、模型收敛失败等。","parent_id":"0ec268dd-b05d-4843-8672-e1700ac7b2f6","order":0,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/train/PtTrainer.java,src/main/java/com/leavesfly/iac/train/PtMultiThreadTrainer.java,src/main/java/com/leavesfly/iac/train/collect/DataCollecter.java,src/main/java/com/leavesfly/iac/train/store/TrainDataSetManagerInLucene.java,src/main/java/com/leavesfly/iac/train/trainer/BpnnModel.java,src/main/java/com/leavesfly/iac/train/trainer/LineRegressModel.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:10:14.77854+08:00","gmt_modified":"2025-09-23T18:19:37.811866+08:00","raw_data":"WikiEncrypted:KV52Bv4ONjB4UC5EXzYV5Ml33ey6mmqCUUhBCj7n909l/atqAWcGN+NhhlBv0EkxBQxGJelnhYLH0izvGp4YVekXpjLB/T5oXc2jrpwoukVKJA4HdWdj12s1+nEmuH0ZiVxU10Qy3uV/Uptjs8k6507u06lpiJFbxyFXoLl/cQsxkHScihCzqXr79SP8WVlwE//G6CkJ06Z48h+rSfQqr352BQQQ5ZFh1TjuQ/Yk7gexOglpI6I7J/kjuAHFujVbwI2Rsqdbvl2Abnd7uwO12oTzFSR6dny8styInr/A/PEF8uoPyl91PXSj5eL05l5+on0D4khNjFa3b6f9wXgTYUNMDNuxr4Yr7A99evYyAlO+A6V5d2A6hzL0SGEiN4L/+OGk2w9MDblWl518cHKKhyMBz0GsDTbpIY5pIYJE16+g6kO6isuoQuYALjSC/dBc/m+BE0Qm/zZmNI4mD4lRYf0adl7ibpoof0iSOU4yfXUfwob897fuaGMdD8GycUdtyPGpdSZ05fc/pIk4HhzKgKe0Uy4z7ZZeA4COB7JiEdgwmPPZFa67E/9hXJQne1JlJrNhh/3oj+LukUimmvzPMV+Gva0J9y48D0OiIdCqoWnst6AyQg6v8VMFU/fBuMH4AcmjKU4Y9tZ6Rm0WeHB8MlUx1lfERZqfW0W6oR8DowKT7kN8hg1ckDDtxeerCgz3exLgnqzm1lJcj3GoY0+ndtaDnkY8PWWh8kG3y+OJbkjZ2CTMUeGJnnOEDcaQgxs1zrQRQGXL89RCbXU1KlDu8RBIX8ek96XxmSN9S0i8oirVmibzm0WrZ5U2VQgJMGb/FCIV+IC65tIMGHLbi9XOIRZVLFPVRe6cPgw+z1rPIgBfDBB4QTmPEKJUUr0Mh+zIWlrG1ilmm2m350lMK7Aw1raNTUA7LHUWvMWzHzcPn/9C9SfnhB2SUuK/r3sz1pVbMHDxFPt3QZMjKRpg7QFBZDojzPoJkO5uO2GpAXXtZYr8O8AVfWs8CtUn/iavEq3eCRB0mJqHSVVUNJSRhCOP8o5u78+4nb9rh0Ka4kTqZFZzWLSb0gHeLwZQphCR+8cQunNdiLG9kT6xxWyzeapX4Z47b8I+/e+oMps5RLs1eCJoiP+6q7trRDyCC2mH2bcUSONDVeKnzQbv+7bL6T47Nzr3kjfc+pVCVzhcXkbenZ0zPHB3jpvZBjOLaxjfHE5XySpQrwrLt6fTrmyuIxVhjPEPEOPoKY4eaRtR/ZyXsB970EOqe+zevd8QuJZimspE6KpTFwkbYK2ptcDosRnSgoeFWsjP29kx3rLvGMgwj/0jQbmOaWIi897J3YDNul+aYfcVzVxntiEwnolLxqN8a5DVe2xg6+qfmp4pruKUrYZvHqNVpCRMUEkonTZHFW+zvOjDYSVU4vJVyGfEXPHP3AovplimuNdjcH1VLb71Mxrp3tkKbD975zqc/gt0ysNSXXTkLrHOOp9/Mz7SYrRYlvcuemBLOZYg2/Whw2sS4XJG5hA1fDo8JYG8Hpr4NIXQeqYOmXjnWs8fhi916G6wodSHNvecvSnmarCmuy+bLRamUD9+Y2XJOHtWAZHdHp2yJfJ59hJGchPgHAMI1VlcAU08W2mCNRJv4FkUzdH4x/mQcJjNboQaFmctBmkKc6CHMTz2Xj3N748eVTMoMwvYoQq9c+TASc+nt544dtEHid+sw/i5sYWenCUhEGQAWO3sMYPenxtdv9ZGv9WPe2l0eI1/v9aGiQrUzJWXqL5jcad+OQrSwk2uybiSUls5KPPSPV0n5M1HqyXBYCSp0hwMn4ov/sbZK0Iri4kQBesPMf7xgQEh8BEUi81zQH3Oo4ndb2KVcFapVlXij9KtKXhXT/G8Jls7h0leEpf1zDEB6qeB6u2szMu0XFri7ltmq1qTLE9N1a5tm2LgOW67U83NzjG/QIHjVK/aarhKZ4XUDx9hfYyUloul4RSkk8xnCr1uHa/fekJg5RzMHXGejGcqm8rNKYhMgK/UBQ/RU4ttWjKvgdJjOulMYxJO5fVK9vBcdg3fR34EuVisnIDPJqNhjJVM0IT17Tcb5T988+ec1Rs=","layer_level":1},{"id":"7f8ab40a-e31e-4dfc-a283-8213fc711e47","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"PowerVector","description":"power-vector","prompt":"创建全面的PowerVector数据模型文档，详细说明该类作为空调功率向量的核心表示。解释其内部由PowerValue数组构成，每个PowerValue包含实际功率值和对应的PowerRange约束范围。描述两个构造函数的使用场景：一个接收PowerValue数组直接初始化，另一个接收浮点数组并自动应用全局最小/最大功率限制（来自AppContextConstant）。说明getSize()和getPowerValueFloatArray()方法在调度算法中的作用。提供实例化PowerVector的代码示例，并展示如何通过getInstanceBySameRange静态方法创建具有统一范围的功率向量。阐述其在PSO算法粒子表示和调度方案中的关键角色，以及toString()方法在调试和结果输出中的用途。","parent_id":"a2b6115f-c729-436b-96b9-5e2153f96a70","order":0,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/domain/PowerVector.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:10:37.15978+08:00","gmt_modified":"2025-09-23T18:20:39.183615+08:00","raw_data":"WikiEncrypted:O/Dtp/DOLsb2PSseY8wqoeFyKH58mmAEWnBOUVu1QV051hD5nn7r2r52wBIGW5RhfOxY/qqz7V9QVehz2xg4dNU2V8gKGLRGmXkWXx4wgxp9i1J2/Ft0CMzM0nWY9T0Jv0IFxYEhEEyEaI6q0qgbJZfiJA4Tkz3l1J0z4QbaUikKEPrxUb9h6pqZ1NQtevWET7BToRZ/ZJty5o7945MJd8xoZ3CtuFHf1KMeslNJXOyE7ftVC+eSGPQ1W4qtkF+tpV8uu2LdK4gps1hJSwLP0o+sGLsSOiwfl+0gt21RLp0V3eey4j2Orpxc7mRQHP3X5k9FomcSyFv1t2dmEXHZzDD8QmvxQB0sPl4/pU4WoI9PyFUj7S0+5wuPOhz9GbrQ6xt4ZflGYBgxEWxgVarZoSMGv+Vr8QuuWBkrnLkPTpiy32X52yLNOjbRjKazGty+mH+9TuhFLCYaDx3kRz+wkn2E6/QjYkGM3uLRGf8S7PXhBs1UGzrgNxwXacm68PPLI8bINGUtyIk+rKgWTWaAKhYT9tRNYNG5ox7SpAo7LcbNmuIOyzQN7foLYQkcBWCv2j4l46bPbnpimXvzHDJfxl3LHJwewKSXynYbBp5+snOc3PPJgXDiuslNN17j0Dp5G9cQQ5JX+coF9IKWrK0GvzDrFLS6d1KvC49TfxLee1tFhlgu/4RYqHeGb5dxcsng8E7EIiVeSxqXidYhOknNhzA79hm76VmnWS1e6Fon2h4+b2xoTmSD7C6ur5c4r+r25MR4YLZJTbcMauLCwHJ4sUps+/rD0Cs8jms+4TBqAMqDSJazSvZSaSpuHNosf271f/9XJXqaZxgXRiR9MZCHKF/xE+9BP3f3XhejgkAUkx/EfgjCYKIhdiNUHH+qzM61I9JGiY1+VIlVdCTOwVBAAtC/QqTxkDVqN/cbeFNsrZbooDc8I/PGe1yvRuJITUG/KWiSCx4dcjiQVfOQSImE2jKxnLbNloD21+6tA2FvYXqTwoioQFFSIrVcnluPg1O640my9nFnD9PgepERe1Un3V3dcypZLddA3YWQQ6FFK4zLgRvPXQ8Ijex2j0ehrmMhgUkV/RpCjAyUFNrxeKwfltfhAyA5B96JDHIx/lu+bR752BQ/rb+Y7UtxOsT7y205ZulGfU0gfp7QDHEr/VNHjkol51txqoKmUcafYdcKEsA4egZXg9q9LNOONgIEnTDwOT/rFWmIhd011+PHMJ48CR5KcAfmcMLgTZdSzayrCDuEXepxkAd8EW25PJurMpJWYbt6YOR8bC6SXi8mLyCX6iw1vnDiXkjo1jfPl6VfF2sDMz1Tp9R3ScDw+xcxTRODVPTmCKTkdpZAaazMLl5O3uFPeY9lQw1wOkaDliXKYU0TJFCREYkXhgaKG3RIhuL1","layer_level":1},{"id":"8d6c4a38-46da-4d20-8198-c2138470bbac","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"数据收集","description":"data-collection","prompt":"深入开发数据收集模块的详细内容，重点围绕DataCollecter类如何从文本资源文件中读取历史训练数据。解释其通过ResourceUtil加载power_temp_train_data.txt等数据文件，并利用DomainParser解析成IntellacTrainDataItem对象集合的过程。详细说明定时任务DataCollectTask的执行机制，以及如何通过BufferedReader逐行读取并构建训练数据集。结合代码示例展示getInstance()和collectTrainDataItemFromTxt()方法的调用流程，阐述其在训练阶段的初始化作用。提供数据格式规范说明，包括传感器ID、功率向量、温度与室外温度的字段定义，并指出常见数据解析错误的排查方法。","parent_id":"99e671a1-2349-49ee-a8d9-5c00a13c6a68","order":0,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/train/collect/DataCollecter.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:10:46.391784+08:00","gmt_modified":"2025-09-23T18:26:28.663488+08:00","raw_data":"WikiEncrypted:/j3nBh2eZGsOhaH4GyKboojhJWgDVqMj9I9A3gJz97pKFxnqEvi9xsq+ldN/LSP5o+AbbUPUA6LQSExv8mlMYT5VWT5V3U4/Y8IZGd8Qv5SurKYzWkHgekk7KMsuY0+vXPMqPVw3VRGuCOaGU0ZQSXAcY6JSmQmVnRkC3RUdxXjr/0c+Y5Ws46NpITxt8cwZ95lkczdbq5WnlsMQUDWMfRGC9vsoszRVacMnYBC3BPl01KAxuuOXp5tfFlkN+rJu9FfWs6S0Muoa1ncMvQriTcU/6AxOv2hSZzvYE7q9YchgYR7cOM8lFwIRkkYF4AvS/gYgtxtZ5VmbYdCLa9vttNYyxOI9/Df1TZhfLFF8xc4pGPg58K6PN/UETyUCFKqOf5zZU6LC4/PmVnMrIvY/HAarXxGLkfWNwc8A0aINmcXtEhijMq4zz5maYpOjGvsGg/xJli5K6ZnnrWdUH1T5Esaurq6mgbAqi1JM0rboEPzWVNatz/rXLqWgyxY8GPuZq8qtIhNaiNuE/2F7krsgN173adFpfe8Si4QTEbrxmLPXtoUJ61l5wzS4Nk52dscHgngq0dX2vSXbb6wyp7BZdHpHIGmTZaEuBamSR/4U83EDATkH3dVIaOkN1juAWyc5W0Aruyl0syio1mVJne39aoreuwg8vuDuiPHRL298E3CCc4dqKHLeoh99jM/4VHXbotbLceDjYQbzQTxBRDsHswziE0/gtp9VsnpIpqFuYB7GZGele6+zcJKTML9CtpooRYuzYbtPxllbPfXcX83VVmAQvyaA3asif88SF9Mu7tQzWaFCYRWwRtyffhBiPiJJTPV+tKHNLPingbauLhrX1MpHpOLq3iM4/0pkcFcRRmx37L52nMOex9vcVPLoT5OKtmSteznL0JNyd/J2cHkVX5xxYL7HlxEkFi73GglF2F7FUbUm4eXEKJ50li8lYtx2/hGS6lsWB/F0vFxF87X5BEA7qqA7+9W5nA90EBGC5K2b62MrInhWEq/c4mgTWxFTlKzL3Gpv1vsSVLjcJD63fvg8J6kJo+jhCMiq4o6cc9fRZZvKxce3S4QFwTicae0nJ8yYHtD59Yt+jH776D1nVIX8kLAdvhXmhwxMySewjutCl2Bbw4eXgZHG8MBGqdlmqg508K+Sdxdj4NdAS3m9N5co2cwY33Kz48DjsggaRXsOCPpIE8b4bYWZ7XyO+dt0WkS5riZJ+Sdr1gy5ZVgjCQyYoA0ur9hVz2Tc2mw50TbzffWtHm1SLkD00yMBdxwCXlk18oyQeAsRP9NRwnql/gMXmAUss08rboTQXI2XZZLPQmXD32H1Uk0A0E9SN1vvVl5jNR8I8gOOJq/Bf7RDcQ==","layer_level":2},{"id":"4a0b0d4c-7745-4bd4-9751-a9a3ba78e74c","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"PSO算法实现","description":"pso-algorithm-implementation","prompt":"深入开发PSO算法实现的详细内容，聚焦PsoAlgorithm类及其与Particle的协作机制。详细说明粒子群优化算法的核心流程：粒子初始化、迭代优化、全局最优解更新等关键步骤。解释findBestLocation方法中如何通过指定迭代次数驱动优化过程，并在每次迭代中调用粒子的updateParticle方法进行位置和速度更新。阐述initBestGlobalBestLocationAndValue如何确定初始全局最优解，以及setBestLocationAndValue如何在每次迭代后刷新全局最优状态。结合PsoPowerScheduler的构造函数，展示如何基于空调功率范围（PowerRange）初始化粒子群，并通过泛型T extends RangeValue支持不同类型粒子。提供算法收敛性分析、参数敏感性说明（如迭代次数对结果的影响），并给出性能优化建议，例如合理设置PSO_ITERATE_NUM以平衡计算成本与解的质量。","parent_id":"c067988e-9ede-4e6b-8e35-966cdac55ce2","order":0,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/execute/scheduler/pso/PsoAlgorithm.java,src/main/java/com/leavesfly/iac/execute/scheduler/pso/Particle.java,src/main/java/com/leavesfly/iac/execute/scheduler/PsoPowerScheduler.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:11:14.58614+08:00","gmt_modified":"2025-09-23T18:26:42.050308+08:00","raw_data":"WikiEncrypted:HY7IIPrzk/jTk3MENEDXkTyW/5OtlkPjgBrSfTcP3Y+OHPEQSRpQyMQoMllUUnwgVYplJxXKr0IEMl/cPMjQo+dK+OqH3GE1KxxHVRGyjSJzjSCbYaviUI6bCObiCy4BhnwKKq6kRK8qvLDVTApRoaxzkrcv5xKT9G8Sj+ZpJVKBcLUg1RgdHUnur4uZAkICn47ZwEzVtEgHF+FytV9Zh2QE/vkHWzG4IMax8omqTB/wNU2xdeFyO8fY3PDBSSJ49V0xd6gUBIXMaqhGKY25ksypWrl80mDNu8GOALxRo2ovuZRRcGoibA/0ZqBkkbn8rg68rLfvdNqe6VUQmFkd/e06lb64k+lXUdNFI+j/ht0O2OLhDRC+8owswMbY7Us+6+7AZCJKpN1ntfiQ7iBCNn2xtLn7zonpQEYSdjvJFIaEwt20aRD/RHChusGd60yLKYFk2CgktuiUtja5fvRJlRvjfiNA9/CuVL8F9GE/FFU0GjlWESl4zkwvCIIyHvm+xt8IplWiHW1y6v44PjNTvm7w80XIJXn/Ljh4AAyV+MbcuYi+W5EI1cbdbZPS/FvJowpj9mZrHfFDwFLR+NKG7gD74Lioyybk5cTRkOTkDCyPHeox6HSFOt6ybzh5zaMmhKTnLhX//sX69YjeSwNOjHQSZb2hipgAWHGqD9wPo8l5Fbdxa8uR9/LwvmCBrLdzlBMjchyxhd8vyvyk8lx7AMwCnhXgq0r7p3rna8Xa0+VYoqG3apKWMOqqxQWE6fW2hJBDzWJxDRWhfeHy6IrrwxZZ8HDwFBs1JkCZKDvtlH7eo05Q2P0rd3b6J6UHTtJtUu0QCNZeVWX84h98SkdSNyXt56HVAuN59CpsCSYvii8iSfl+EvFGGBCa8Dm1vBHpT8CDYvuF2FU0EkFhOlS1ZRj1THyaREkDJpN3ujyKDregHKREHOehRv1c8ESmWSgSl4gFR3POkmUl8DxyWGJgYcjUsKNDo9W0e1kRwq9MYIl+lBCgN8jxSVngLtNrc1oUMGbTKzKiQXAtvv8yjjM/Y4/rX9Q+I8BUgBxfqDYJI7/4AIYx/2GcKFmvT2mtWZgkopyrN+fEPiuGmTiZi9wFF8T5IV0+YLZVRbUtGAmaHgLWbRr/Q2b5gzbXLnF67L83LGKKbyUOr1KWuEOooIfMw1yxJ857+OIBYGNTRLF+tBFip8+ZRsPK3AObYspiAOsWNcWCSihR6UWSdzEM/yR73AQAiASKAXrdVzv927UzE0r7jguD7qwK4feHDkTwGZFPwkw7a1w8TwajDuMiU4v0e4pIr18hVBM+4nGlQtD7ZAWN6CAZ5Xti+FB7PBFV6qzu9Z8qS0OFEiQAk9gdeIFz9JsX0m07NpT5s6z4IoErHoo3sm2FbS+UAlgzqfUjuDBUJdbME3dJogoxHQNlRGDi8JS+qeShP8Az39UxOMMK2itNXLCvVYhcu222pYtuF0tDMhqBZpXdQRDpVY6NE80wicwny9RxhX7lNlzPMZ1oSYjUZi5sF7AB6N2PXg8UOiiUwljK8mIBFRxH8sCgJZfy+pVFVeDmhUPfQr60OTUUAT7nPo4WG+2FR0i3vpA0lren2a3YlHoyXTvltnnI2FT2kAoj+/dlA1pb8dOMgWGwxgmpABlpCDjd3rgTXj6CcbrPUKfC1uXO5MjpEqXNxvKnvceaCPiNd5O4VR7F3PoXUwl6RG7yflzTTgsAGD1MLzo988J3B9muwYZUPBF/j04gMOHcWgug2dFAw5AJ0ggZKge+GzP/1ank9DuczVPolGKggLg6wTGwgDW0W6e7r0XsrOILuF/5wQji0Sq1qhyAwq4=","layer_level":2},{"id":"3e751911-1458-4648-82a1-10ebf9c00858","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"BP神经网络模型","description":"bpnn-model","prompt":"深入开发BP神经网络模型的实现机制，重点解析BpnnModel类的三层神经网络架构（输入层、隐藏层、输出层）及其内部细胞体（Cell）与突触（Synapse）的设计原理。详细说明模型的权重初始化策略，结合BpAlgorithmConstant配置项分析神经元偏置和连接权重的随机范围设置。阐述前向传播（feedForward）过程中信号在神经元间的传递计算方式，以及反向传播（backPropagation）中误差梯度的逐层回传机制。解释adjust方法如何根据学习率和误差调整权重与偏置，并结合代码分析训练收敛条件（最大迭代次数、最小误差阈值）的判断逻辑。提供模型训练过程中的调试建议，包括输入数据归一化处理、梯度消失问题识别与参数调优策略。","parent_id":"c1b6cc88-4296-4325-9fae-bc10127a3ed1","order":0,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/train/trainer/bp/BpnnModel.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:11:26.146854+08:00","gmt_modified":"2025-09-23T18:29:24.516566+08:00","raw_data":"WikiEncrypted:pYk31QUVSBfmCyiJ0pB4MeT92cYCMA8yZ4dWdrnlgQM0crkyn6JbH0T/UX6k89VqT0ZcWWiKrG2pbHa3iUtIpbzbQuFHdxXkEjlYgvcjrreVvYchxL8toHxmNUvQXkzJNliR3dVfv0Emf2dZ2DTVe2jO9chASjsSVLRzQdTcJ6wRPlpdftBP31sZWRun0rqP+ADn0/pk0oApp7D16maCr/ORQ3uvFkBs2a8WHL1v/YXslRHw4Mv4w6LCtjtiub4TMx9br4YdSAyP32UCtaKD31hb3cwpxufRpjEzOVvtVi5Mxnab97vBRK12r1WF4OjyETTIsV0pc+IOSDDv2N5V52Aa+flJwM35yh+DIBfyR1UOJqmYHqEo8F8lExCxZwPKItokrp0AkQge8vj/1n/TgwjUZV7mEne7RqvEpMEBEaR1hitXcqjwZFqBmb73YnamkOH9eH/aflN2TdpSu9pyS9AOv6jFv4KE4+/dnJ7M1vzGDka5qTmxR2yeUTqvTxm/WcP1s62Vnqr5Ay4vjkYXf+s+WhqjSTaSJzxM1rtJJbsAQZWqJoOY3wE43gHZzvfqHGli0Pq22DIsDcTwOtAXkUdv+lQRFbQdb38YPBU1TjZ0tXYl0IfhIBxMqQHfYxYVzBc8uTjm1RraBEAwVLTgoRZbLLj0uk9JqUM8FN4IXFoKQLbtSw7xaufyAl+4AOpKz+i+LWmAzPsW/Xj6wbxXDfDa3/FwUcQ1rZrNp/A1nbJqyITjOrFQvOC/B6svE5KBblKitXTYxrhB1kfvk4XPLqZgBYfCMJ7pBpt/fp11CjXOCJEaUaShCyBG7fr3X93jk5NpJLY2UxaMZajC0pCKuyY/EGSw63nE+HT+y09sSfjT3mgV9KYON9IYSDPZMUyW6aNL8+W6bUe1uPhTEoBHQxNrqSlvOCupvLqJBre5qVVoq8l9+MV9tPggNBo1dXR/6nbhXfJY8QSM1CXYDu0F8kuKwmsELYlvYtrD5C7Ww/3T1BKpk8NKLd7ylgAge8YbfMMUM3N8MbXHmTTgbFcuAg+OvmSYN7ifkh56YqTTERf6Ii8slDwwmVKGrIjQXFEDiaUrngErZpw+pfnHwDs/oNRXIzdziPRcb5zWb+zUpMVvFB33r4LdPzFLGAl6ZoT7Ic7KmeICtL7d8fPcKBrDId1FxGwzJYy6ENQosMxECUGH0Nco7wLKY2peYweMCQ2UyJcbeAz1J4qOUTT5NS5dHHFOKxvbQ0D47IW9Kt0+44VCvWGxenhRTXX14KLqTC2WfjBWu/jvfkgYZQTkEGAT0qSkh0aTpiWy6taomKvCsrnUYbX8/EqP/XIvaaJHtTJ4Vd+/Bd7WERT7tBxWvFwbA3NkObTV6tkai2vljsp3Kpo+aRsVtHkO0ztqVH4BCFsYpY+B1Ui+bYXwmXECCXAxkYu05QPKCVc55NXdO216CfK+TqFM3wKzDW9KXx+D8vv8RcdA9bmdbFHfssYdv+89CiR76YJ6hwvQAD+Aiy2UUC4=","layer_level":3},{"id":"da10e1b6-5223-4898-b33f-3471821e12a7","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"快速开始","description":"getting-started","prompt":"开发详细的快速开始指南，帮助新用户快速搭建和运行本项目。说明运行环境要求（Java版本、Maven等），提供从克隆仓库到编译运行的完整步骤（如mvn compile exec:java）。指导用户如何配置资源文件路径，解释默认配置下的执行流程，并展示预期的控制台输出结果。通过具体示例（如运行IntelliAirCondition主类）引导用户完成第一次仿真。同时指出常见问题，如依赖下载失败、资源文件路径错误等，并提供解决方案。确保内容对新手友好，步骤清晰可操作。","parent_id":"","order":1,"progress_status":"completed","dependent_files":"README.md,pom.xml","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:09:28.951122+08:00","gmt_modified":"2025-09-23T18:12:38.600814+08:00","raw_data":"WikiEncrypted:qfgbutC7oyxR6nMxrwk1ODnNMBEQ3/sG78fQT1yXWju83LC7H/jAM8CEAvWT8huE5OClmQiIfNYNxHQ9s7RRS0qKOV1Xow/Q40Lf5w81YutnyWR56WS0m6diV6qmfJrtXdkJErLgoTFYICq62QrkPisWB3N2iSk4MKppX6zvUO9ehqK+XpnG5T3PEGTurfaGByVkBpmswLhpYc+w/Gvhf8DsZnbD3zWo0YuD38UOUc4CDtcxCTEJUI0Y6zvUrWUPJvWbtZ6fKfdSfZCMB+940M33OO5YPkcnd6eMwxZGQ/MvQSV29ZXVgFVgTxexR/wekkRXiboDsU2hzpH5OlleppPm8KOE6fuqLdW5Tb1QMR4t3H6q/ctW/GfilacImCVc5e3BBh3uyJAhQp8xTWmxdJbh9Cg3VM8TWDuO3QO1SEnyUD3lk2gqQ1noyfV2hxlYo8XJrZNuUY5rt4e7U+1ixLNthFYW/thSxK/OBcaYQq09kGliQWjbCgXgnPY4T01VePWiS6RxFme2RE2XBN9upjoEBAjKAhf0y6dRKL6yBuAEOqyzcptcpqjl6pEOjjZVYOegW+SxGHs3fqViwTy1ilccnO6ofePyYKmlggRbcbDAS0EwKRElGjQAcHluIYX0fiR00g0F5+fg6l5Wvf2iCWoqTqjH4MzgxHxHS5UDc1bRpBEoy6X1XrkhA8F2AZNf5DaLHs/ELHVumv5qhpjOu9TYY232Da84ztgJDRO/yXrnGOmoTYpPZmc8fc+Oj8sZ+f4cwfBzTM0wK33a+b15rYusljc+QAVW9UPIrnAvCQdpqT4NNEs/3idiy6W4FNIPI0UcbKN2vg41ELYEyJIcjBb/Xg7tX2Ho3mfmDm16Z4f/7ety85FtpHp584wxt7Qbsdx+jTBqeftfvvAS47/ERRIcuKlOphn3tCAYrXBLmXIDOMSUscGDKRPeI4Ea8KvRkiN0CygL4njLz5Jok8W2rivF8Sr/MHF2YZcMS4yvvgXXgFecLZ0hbcfJ0ZWYOtwgHIUsnnGPKujyIBlrR0qENyJroDmjEPolsCYi+qaNTbKhBg+McC31oemvyap60FTgMtGVV2vSYsW1OlMCRNSadpWZT7X2Aw+F7jBd7IIFpzKccpKyUqp13FvaOsr/17XiShsOHZV1+xfsYpLpjJtN/w==","layer_level":0},{"id":"801711a1-e658-44d9-bd4a-76ba5da470aa","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"PSO算法配置","description":"pso_algorithm_config","prompt":"开发详细的PSO算法配置文档，深入解析PsoAlgorithmConstant类中的各项参数。系统阐述PSO_ITERATE_NUM（迭代次数）和PSO_INIT_PARTICLE_NUM（初始粒子数量）对算法收敛速度和搜索广度的影响机制。解释惯性权重从PSO_INERTIA_WEIGHT_INIT到PSO_INERTIA_WEIGHT_END的线性递减策略如何平衡全局探索与局部开发能力。分析PSO_MAX_SPEED_LOCATION_RATE对粒子运动稳定性的控制作用。详细说明个体学习因子PSO_LEARN_RATE_1和社会学习因子PSO_LEARN_RATE_2的协同工作机制，及其对粒子群收敛行为的影响。阐明PSO_HALF_OF_ONE等辅助常量在算法计算中的具体用途。结合代码实例，展示这些参数在PsoAlgorithm和Particle类中的实际应用流程。提供参数调优指南，包括如何根据问题规模调整粒子数量，如何设置合适的学习因子组合以避免早熟收敛，以及惯性权重调度策略的选择建议。列举常见配置陷阱及解决方案，如参数设置导致的振荡或停滞现象。","parent_id":"f19da748-27d0-49a5-8591-9fa53f411bb2","order":1,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/config/PsoAlgorithmConstant.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:10:01.661163+08:00","gmt_modified":"2025-09-23T18:21:19.15252+08:00","raw_data":"WikiEncrypted:jdoT8b8zTL10lcgX1SPWx+cL2jtxjJSclaOTK008TxDE9vWAomY86CU0nxy4NMVibAujZj2mj4TnKfrfK8mEXmbVW8Nfy/1/g/TIyuY7FHcXKxOgXPjARLIQa6wIGYosgIYpbJREsiU37+hu6gdtmVGBzB7pogsp86PdSwXYEYw7cslTfnF8lK1Kf+kZRXFr12hrAgr38Od2n5l1/FB2DjMwBFAeroEN/lrnmW4Koo1O6kSAXNDxhy6BxPPUkddYkZp3LhdMA+QTkTZmQPxZo9JLnFKZz32IIu+CccecVMb/kVO36S6p1s7RSvt53NYzsBi1EOqOxdlyJIpMmb4DyClyA5reeeraWM+zRRYk+E1oDQnRce6K1fFkP1yLd19Ecx4Jm2EOrFXiJyp+ifJvO2MFcy89+KbCug0aXpIneeUuPM/bFMx5AA64rmmLu6KgaRFyGR8W3HM30Myyqex+1uBhrz4OXEkpV+mblC0PPmdTrkGHGLp87l8K+Y0c3jCfZeYzw57fc9o7ofY0afFhVruRxS+DG88izFUnHm8yBW9wAzPMYx3YDNn8EHYltAYjLjKzyregMnL7ztCDnPVVP9VphLqhXFB6gvbmuLSgwOyfJAtBxxJQF7wdNJMbO92piilLruzdGg6SkxWitpm1FV/tDnX6xFJksbiHH8XFRHZt5yDkwL+4KLNIZIU8+B3YrmClZHHUJOiiU6sndp0LOP/++ziE3lEHoFF+rI05itt83q6S6JUNMLQ1vsq4e7D9Z/DphFr1p3IrfpX/A91ODUE2NPmg/n9O6Ph0MzAzqpampHUJ93pe7ddjJsMeeEk9v3UNqs65NIz17GFTF3tj5Iw/ow7eGfwcQl+KoJt6KRNCMqppwAPULQxkiCywzGaevtj6VrNQkXW0ITspil4V8GIk0FKsAk1QjTxQohjz6gf/eqdfXPjx/5Ro4tN9QcjcsWGyS9im83pMMOMUcSZMhSMb1Z0SsHxL3t7POuzMk58J6xvk3DRTSJFYgPpjV0/3lm6o64UWVWjJq7Bz35bGr5YoFsizELrHDEpH0/Rxr11Y6Z8NyseMlyaReMI+9g0hzD6qNoOJwvAj2lFUntavVNS7leyJpUaTrW94rktSHvBn4NH62EuFd1ncQngR+Nb07C32NFb2prhSgHHUmvgdnd3npc8vC/kGHOgvq+GVr1CuI0ziikRphNkoFBZqRRwotfe2mxrT0+jfJHYJKRtk+bBOuNBvizn/dMln6QF1GxCok0Y+ws3tq9sZpYAQBZMKHVZiNsP78tsWs80O+nKDQ9/HXyCIUXEf/8Gjp36V06hddSwyHsTBK4VOEQZWLwJnwwptxcFzS0SNw8gu99MjMzDRsh/0QREjEhePDrCpG+mrXC/W4NchmkJsrFRPPLFi4bgIp15kGseSnNk/r+N4CuBAnpbI+rYBn43wM0uUunbS00iMDnXQnVe8olG2N8D/c0G8L/XDb79SCQOspNKtW4j/LDZbdJ8LPIRhE80VmNQqEwSJE3/XuIXktEUOXgZ6iyWUr2353fnPs03KFOxld/eBrooNx/GUaFjRHA65vYfX8UCeAe/LRnkMV4GTEXG1lIuo3UcAlH1+24nSc2wNm/qPKKmvncDd6po/0R0BQJShpKY81lhonYIR7Wqc8HxW7OBbFGyjbebeXFSViXIH2RK2uTnpDtr7v8Hw6BdeSJPPZc/YLUc447O+zNguJtKOZvbYNMbSXa1UOTMomFjHn3zQm9oJsMyj75kW0BJtX2xMQC6L7m2QexZId4oCQOwQLSqKV+M1tO3O8dHVR+7WA90GbUxOyw9vJUsdbU5xIlXf0YReSI140nx06ewuidO93LQSNeVbPwnmzFi+NxsugJ+NcXbWA9rwtTa2T0m6eOUjUm24yrRFnlCEaxQc1S1i","layer_level":1},{"id":"c067988e-9ede-4e6b-8e35-966cdac55ce2","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"执行模块","description":"execution-module","prompt":"深入开发执行模块的详细内容，聚焦PowerScheduler接口及其实现类PsoPowerScheduler。详细说明PSO（粒子群优化）算法的实现机制，包括粒子（Particle）的初始化、速度与位置更新规则、适应度函数计算等核心逻辑。解释PsoAlgorithm如何协调粒子群的迭代过程，寻找最优功率向量配置。阐述用户舒适度函数（UserComfortFunc）在调度过程中的作用，以及如何将用户偏好融入优化目标。结合代码示例展示调度流程：IntelliAirCondition.schedulePhase() → PowerScheduler.schedule() → PsoAlgorithm迭代优化。对比标准PSO与混沌PSO算法的实现差异，并提供算法参数调优建议，如惯性权重、学习因子等。","parent_id":"0ec268dd-b05d-4843-8672-e1700ac7b2f6","order":1,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/execute/PowerScheduler.java,src/main/java/com/leavesfly/iac/execute/scheduler/PsoPowerScheduler.java,src/main/java/com/leavesfly/iac/execute/scheduler/pso/PsoAlgorithm.java,src/main/java/com/leavesfly/iac/execute/scheduler/pso/Particle.java,src/main/java/com/leavesfly/iac/execute/domain/UserComfortFunc.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:10:14.780267+08:00","gmt_modified":"2025-09-23T18:21:58.224251+08:00","raw_data":"WikiEncrypted:jMgId5h0EoZtwilIIkOV3miZ1ewIQB9jibSoj/Gy3BlS2jCLsVeEY+MgBJBwjAUOp/kl+QteLJFed8whbz2k0LwVnDVnQJUaomPCVJWQzji4hd+3lu1nTTyPFMusvwobgv0mejcs2BXKsRXYR05U56OQvBzRiYXisUIoIA+1gLn5A1KnaLmOM4hA9mdIMu+t1BADShBObneUCAj7hI4kcbktYhcfkewiK2Pm9tQ9JooxrI9w4W4LGHdIJi5rZ4wEfXlgZUpt2AaKek5plaXCmyVNoySWhJYkb5h+vjhTS11GUptR/R43HcChtaucIXYrtKDCU2lM0Jy++zNkXZNT7pMptzU/JEIpex/Eyuhc4pkLvIQfCpcqaBgbXcCfsHvXiCyGXfTQg93EgRHgFJiCMeU0WnQA77BFDf7kASH9KKh+zikdynnGqlChP54qQbaTYYJgX3ql+LFQ9v7tqKF+hQ/tsmKMBCGOajUVZxRdJokJ5zcObo00oTLuhIhMuFLR99L65ka8GeLdiaDTt7MwAxgcaD5nQzzi2QCklNP/vWw4mG74PUFZ35OI76SWxZk5sZbf554rSsTJrjtGYOvaTU50OdcyrauIcB2MX+foOQdJ74slS402M/9PcjmgugKcUtEORklxin7ejATIRQqy+D0YfVXdlZ6TC5xeV2dA2HOGaWZQL2Vko8MzXxQObBoHcBrzPILarLO7eBGk8/4hXWiZS513/pluZFHTo5a4DDb1ac+ZbiLLkWu9Yxj8SXdKb9P8sSfu/nlNTMPXjL89AH5CXDzT9ipwC4mBhRVKDC/mSkfM8M9Ybz77JrdLHRxQe0C8ufnSwBFWJqiYASsktoIKehAM1/mZxKE0OGNjlvDUdN4EsWNmCZ7Z6HcPTJxTce5qymwG2sRU9QvDIJXuNbfO21uEsgYk0VPW6nWlR3H1Ka7T4cxR4GGxD+33hBjqI+AW8N85pgBAadEmI1f39qpwr77fldynGZCwndydh7qN75dnM9kxjmKPtqk6s7U7qloyZizicfMxqSojMrdQj5saiHs2rtK1dlChLtKK8AoWSfkU3CGXoHSSy7LAWLJfqqnK8a442rWxWXFv7fvsiV8ggP9+vWuaAwaLF8nx+8ZxhDRX6olXC4WW4GiPZ8M+mbaC4guh/sYH+dorUc4jFU6/FXRTQkCZ7zwsf2xH6j6gOLGPsLDdStDFUYYNBMRLpWrvmYJ7BEta8065SNP1j2VfpDiQOTej2nEg7w9G4X+gayFnXasEk0h/zu6OzXLoaTZzLcAleADy32Orlk0rPPfbBQX3csFmRvGwC2P5pUq4eGaOVUkm8Bf4M9nkLLwTkeDmA6zSx0f3CQoHm9uBmeHQUwmeKd8tqNpdj2F2F94fI788byOL6X8/DHZps3IXwivVADJf3g8xDueksmDzF24oLNfHGt+wJDM8gqM9XhgM3gdpDE6K6sqq6sGIfm59+huLZHIyrov7aG1u+5OaanxwnHshloKpu2sBjzBx6F2/XgtsDVSJ9Gb/ZvuiUw2KsI1KUzYTYgOArklt1xjIOPewWK4HZLfJpLqM57MelPJergVpqT481cunfAuPSndfZA+CclIcN/xUtXqcc199EnCkrexY/atIqbarTVSkAQwt7OME/QKnfsINDMSnKz6pwwZ/35V37Ig5RtePByGX+dFD1apkEwBO99t9rwt2KwWA4A+DCxlJV7ppmo2LRXETrs4h0xQqsnU9QHRnF5LDUwusHfkpII4VsTASjo/2SyAtHdGMaMrk4Afju0RrxZAO6T1iQUuD0t73Z312M0N+XE0+v4EauLQfuPBvUShicNq7VuJuXpErJ3VgsF8jxexjhuruBq/isgOITRZoOKqZ5MeUreKl7Epr/vAvFMGUSdygU45UDvBWvnpOf9eF1MCF","layer_level":1},{"id":"5397802f-2131-49dc-bc75-947ce0d99f8a","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"PtFitFunc","description":"pt-fit-func","prompt":"开发详细的PtFitFunc数据模型文档，阐明其作为功率-温度映射函数的封装作用。说明其三个核心属性：sensorId（关联特定传感器）、outsideTemp（环境温度条件）和trainModel（实际的预测模型）。详细解释calTemperature(PowerVector)方法如何通过调用trainModel的useMode方法，将输入的功率向量转换为预测的温度值，这是连接训练模块与执行模块的关键桥梁。描述构造函数如何初始化这些属性。举例说明在不同室外温度条件下，同一功率向量如何通过不同的PtFitFunc实例产生不同的温度预测结果。强调该类在仿真过程中对用户舒适度评估的基础性作用。","parent_id":"a2b6115f-c729-436b-96b9-5e2153f96a70","order":1,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/domain/PtFitFunc.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:10:37.162005+08:00","gmt_modified":"2025-09-23T18:22:08.016084+08:00","raw_data":"WikiEncrypted:wsofpfQvgb69SPf7pxWFWKJQQBuktkA9eRKArFxBRRDoSP+pYsaDp18UZuRRCVyG+bSJghtuN/7YfQejUb3sjbtiFWWrLy/zIZu/7RBNQLz/r3CWu0EtkL73AYBJy3QHmK85uPinv+Q8lZa0vioPChBqTbgS9D4tVHVN8c27ugWRbPGCzFyMzh95k+jKAMXuyo1494gROjty0V+h5yjeHVYVZFFsjNL7NEQg063YsK+BMrK5nyppKtdNN1TIfzLhC9rkRdXyW4fZHvaM39wq0G/LKyXOz7OdrDzn2wSJJa7DofpFn4qJFdKpbAWEt13q6vBQfsED4hGzGbd3VaT9fibgGaBvs2TWRVda3QXh5agNiD+AJhkx+FUNO7+pEtoGYebLAAomIJgg8N3aRaufk38EwvZGp+TVEha1Dm52qKHbTJDDjnLRDO6AE3YSg1LF61zVmaI5yS5A45jF2PVnAZLlZvtqggPTmXo+EsYhKkWfiUaqetmFIuJ9KdCL9MXZUJJuGves5+maKwn9KxN39lqy2w+1Y71VoiXKAJGmxLKzujgvKpH+ACkjpiji5uIVKzAZYfxdg47dXAmUU+eAUTNp25xTrTU9p7WCIXSnYvSaDux34iup4I/Bk8Ip9fIOkiXia8S8N1q2A+LcBPx+jyM8f9pUvZx5cAzYKe08M9nadWuoGOPKcH5mvnYuciGW5VGLo4CNdxqHz95pVu82+5puj0/SeLVlMFGuchXn0jVo+ECyKyJfOctlpzVyOmSZqnxsAkgcW45eOvMymmSgYvoDr8vd0FPo1sJrAeNavDBc3MbXauB2XxBBfcGct07WK0rnlwqtPtvcpdkusB/vy3cYke7Y8T/nyhMIfZIilL/5fV+i1Kt9pvf+pRCz03b+ScaaRadDHHd7/GXK2aPvKUvGPq2NqnrPIYqmbNUTtJ+DSSbckPwnFTQt42QW3+PkGHKv+AgeoesH2Rncs+GdVQQv5x4Tqyk/x+qaN0r6d/Nxh5tHhahP2I2eHAE8PVFPF3sl/r6kSaXzHLcrHtxUdBOF80RIrWPn4DxyzV4zeRr924TO7xMPVw364GQ1Uyru23inx4/GFLSTVjqP36dqtgHwzQgdRzsxXz0UZfUg//xM2N2mGQtkY4mn4a4+Cqktyd7SR9GWkG2iBG/OITqU7vkuzw7IXFJsw9mPq17/OSm8Y99dde1nVJrKVmnTCyWVNnT0rjVpjEVp+JUxf/EO+wa0JWQ+8NPRn5sNPJZbQVhS4H2KN/MF4xF8IghANTCoUri7CwB/w0d31vVUL4jlOGnwLaIEEYUF4tTWOZRCobo=","layer_level":1},{"id":"c1b6cc88-4296-4325-9fae-bc10127a3ed1","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"模型训练","description":"model-training","prompt":"深入开发模型训练子模块的实现细节，重点描述BpnnModel和LineRegressModel两种算法模型的训练机制。详细说明BP神经网络的三层结构（输入层、隐藏层、输出层）及其权重初始化策略，结合代码分析feedForward、backPropagation和adjust方法的前向传播与反向传播过程。阐述线性回归模型如何通过最小二乘法求解权重矩阵，包括Matrix类的转置、行列式计算与逆矩阵求解逻辑。解释TrainTask任务在多线程环境下的执行流程，以及ModelEnum如何控制模型选择。提供训练收敛条件（如最大迭代次数、误差阈值）的配置说明，并给出模型训练失败时的调试建议。","parent_id":"99e671a1-2349-49ee-a8d9-5c00a13c6a68","order":1,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/train/trainer/BpnnModel.java,src/main/java/com/leavesfly/iac/train/trainer/LineRegressModel.java,src/main/java/com/leavesfly/iac/train/trainer/TrainTask.java,src/main/java/com/leavesfly/iac/train/trainer/ModelEnum.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:10:46.405141+08:00","gmt_modified":"2025-09-23T18:27:33.47349+08:00","raw_data":"WikiEncrypted:o5cr6Bo4m333A3G+lRdTT8+e0apMUro2dQDaq26OVeeqA6tjeR5XNZ9Y1yP8qV80hDuCPQHoWo5cZv4b+oK+PivOaj9FH6ZKw7KOTT0KuNGunOP3yH7M5XGiudM638EwkcaSdhB+YV6/xy0IpKnYi1MTsZu0O1IfKJ/DHZ9TvFPPg+TdgfCBLXCVDurvbUdbl9lzOs6TKFkmVwzdPwcC+iunqG8dnWfTOSBnZZ54Qbi/boPuY84BwjnF1BcCPU8eDcyZmdXb6xEKgWrVIwFS4N5dg3yApxYsBsvHNO4YXYm2qNEjck9Hb67JIvyJxLLJXpg3ujWOcEjr/LB1uktMND9HYePk4sN3na2YOIHj48s85AUYOf/dBrTuY8d/qS9L7lmvDoFgKCeYEKkMil3lLIKJ8EfOreIiI3nnX5YD91Fq1B+UDh4UN+1Jd4DzGDgMUn5abiXelVPRvrNau2oMtuYw3My3qzdzXidHv8lcxEw3/VvDAoQTRPvmoPZ+n/tSxyS+f4q9eglVuGIr7Tb3F9YGpOmKkNl3Z8wwf8B+waCn5XHgWI+bEVVorYynYYCVG2+agPqa7LMGpI09rkMMMgYcMiZLVqBfxCqrqYKAbWsC99oC/0BqVuVn9N4+kfqGidu3JlYFvJ3dCT43/hgUZGbyx0S9OQaRqnUjBCr2fbllQHe0S/6Idp/40uHfciVBBNfS4b57oZaVHlJrPJh6cE3qKQ3EYSVAx/5Gl2OxzKyfa/w+aw7+OFhybv5ipH6s+SbFU031durFPN8jVZSMVX23iHaNApQdZUFEj3d0Sh49Bu9c6yftnzt1u3KeLYGNmjUD857VPuJHYxOm5j3nJrBSofPpeuNoPaAGDRZINSA5D23dges+9i7m7irAZqVeOACUlE0QVT6owlTBfXfMi5pLsYTfl9oTtalRIgikm/jkj2NKnhcm5qvb0m5RyfII34SIaK6B0cV4ykr8OAmJDr4HFNYO0FZ5CUlDzfNvrqIGpvZEiL3JwusiHNi74CEe2zGg9CnCI+Vc7UoTOuCNThxZ0j8tuTHsBQbXpnvdPifNCECkBIrmDHbbm/DPvWikgfV4bCfAuIx1QyqBxrVFlgm2KhyOUIdbE+6su6b3tcxAAIFg9WTNt0w2iNqjMMLRVj6y0hmkOPleG7DeB4m4aWYvd8kWWRarNaOq/o4JVHGwBPjlIWIOQo8zuU2uAZrnxRzrinEAjY0rBTbpOXQf+mImCxy+vFBT2nfWx1zw3oh1I/Fih2mCQ5/MtNCjJzCYHkXq8wZlqVLL44CMQXxinewSm8iOCF38ixKKdDPvtvZIA1l4ri3UXRrczB3//Ye51V56q7dk+MxVfFl10xXuhneUTxUMuktud6ayPeE0dj5wMCppaLnZ2I/aCUui1FsNyFz9F7o1GwBBIP8zwyZii8fZfp5TNan/Y4XU6IHX3H6+fr9hNeaRZBPkAf/7egVe62D43D+aMrnRhP70U6h584lxHiMBnjXT/gKOFkBqew2hQAriRxqhyVdJ7G+Bb5XXo5jeyzFRwlc7dwi4xxRDDPmhviIXQmv37Ur1U8He9QZwFvEEa8wV2KX5GjS1T/xmtq4PSCaTy8WKRfQ1Fqd2kg==","layer_level":2},{"id":"bff3ec64-b656-4ea2-a82d-c496a13b1523","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"调度器设计","description":"scheduler-design","prompt":"深入开发调度器设计的详细内容，聚焦PowerScheduler接口及其实现类PsoPowerScheduler的架构设计。详细说明PsoPowerScheduler如何实现PowerScheduler接口的schedule()方法，通过PsoAlgorithm.findBestLocation获取最优功率向量并封装为PowerVector返回。解析构造函数中isImprovedParticle参数的作用机制：当启用时使用PvImprovedParticle（混沌PSO）以增强全局搜索能力，否则使用标准PowerVectorParticle。阐述调度器如何通过DataFactory获取空调功率约束范围（PowerRange）并据此初始化粒子群。结合IntelliAirCondition主流程，说明调度阶段如何实例化PsoPowerScheduler并触发调度。提供调度器扩展指南，包括如何实现新的PowerScheduler子类以支持其他优化算法（如遗传算法），并确保与现有评估模块的兼容性。","parent_id":"c067988e-9ede-4e6b-8e35-966cdac55ce2","order":1,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/execute/PowerScheduler.java,src/main/java/com/leavesfly/iac/execute/scheduler/PsoPowerScheduler.java,src/main/java/com/leavesfly/iac/execute/scheduler/PowerVectorParticle.java,src/main/java/com/leavesfly/iac/execute/scheduler/PvImprovedParticle.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:11:14.589871+08:00","gmt_modified":"2025-09-23T18:27:47.656739+08:00","raw_data":"WikiEncrypted:Ixm4kI/Z7v0V3JxitGlz9ZcE16c7bpwHYYT05QZRkQpqpcesze5XUXS1vkiVEZxtNobDh2UDQ262IRWHPAAsEcLkYeaVOXjl5mzRaefIhZWUNoKs3JXXS6nEqZKOgMj5+azdAvm1s51KyZG7v/NFwcfcFGYcpoLj7zLcieK9BTtVicuL3ALxnBtBk6tn63xrfVuVL2HxIYojMzv6yJ9goqAdIE1S7fZ4O3ND6yPvtxJEH0madg4F9T2fp2Xsr6alRJHbDZ42lnw5D3XMZ/HsuNtoMDFcxkWHJTxjOl7jlJ6UcN0pnVFOd8VP0CLB2zXA0q1qOAc/2YQ8EFJk50w8xZsVXP6eKMj0tYkwboYmMPjZ3smQyT1xl2ElFwECdE2EfaqU1WMRw12rl5YgqzG2tG73iKUL+3L9THbi+DsSgqVWdQw2zi/EHaeDWYl9RgVIOpBudg7BiAd3DxX4YAxMbtdaMyPBCBir9RXWdYt+W0pKot4vRMrhlTbBxz1KCg2Bu5PizvQNs7WW6z1EfN9HRA7pgjyeAILIS7KiC/staQ4I4iCxu2r9vzxoAyQ/1VweohiryGqEZgqG1FMkl2Gz/vWqQKlf1uODKh85K9RooteKQAcG3mGv2R+BJc6ihL+u24LtI3SEv9Y9PIypRHE/xO1n5vUGUBPrIM5HG4+RIvxxNx+6HzUEmbfp5qNyljegXu5vrQgCnyOmJEfLDCDDSTFYbZqlpnTEN1v70GHenaUu3NKVkZR+/pwv6+VCdC/rewpKB0nZP3hO7DWS0rUrQL2reER8yvfVrtz7JV2XXImJXfAVnNdSj3l92ysoYUkHrF212KBHaWXrjPpXDFhQv8E+iGh9NTF1iiCDGjbmykf6zDHiRmi8mLxMjHNK033sZG4Fenavtc4MHtE/qSw8A97SkgcCpzSAat+BOPras2vKqxwH/359ONcidElRqSNlgP4ejQmXBknBLPmIR37UWr7FDUVv2YuMSp0BOThAYVel8fy50POvv2r2UjlLDUOEdFc6M9VQJ0m2vc9TUSCO54Xw/mLBRXnrbGRL4jWN4H41K45IKHGzW1DRxvnD0RtiTHwMqKgEuX4Y7ydvrWx2eoGCI3ws0xe6HUou0ldstxswwU1nlgsum2yHe4ZUL+TCO+mD0cnl5kS/G7PRU4zkg9R8T/CNgeAG+/+ii1XdcKy7QTJd7XAGZ/O/TyLItUVcly/A2o7wgVt5NdGcJvwtxCxwEx5TO1hn9zz+2pWqRcC2VZ1/rnOxCt1ZCI7cBPgOncEN2K3oRRH0MkNPpAYhySp1IQYH6vtvfYm0HENtWK+t5X9y0ER814e00TJ2JeSDC9YWxE/oKNBQAXP4t+xLVVTF+mc7sjyIaoX+Ahhs6dkcyWAApqLLVi5vvCz/mTPwoL96yEz9JdXlYEB/ya9yIg4AMGEV6sDCrpNT2ai7OpPyQlBdCNpzK8sSQKuTJiBQJ8pQormc+hmqp6n4WtJTp+3/hNU62lMpADdofWs0Tmut7CGoHyWNhpEBNJiysk5Vw7wr0+oKYoxEd2DqRwqlfURN64ZP9S6UsuqxhvBoxCkFiiWFpbQ6osn4ZVwvpzjgNaoYemeGQbUf2NEO+bMNc48R4f460bLnMjO4uUeO1Y7Hid6AYffqwHlSHStnsaUdzP9l0Upa15I45hG/F/WzWNkS6CA6NwVazk86PK73+LeFAPS9OvxetrgyihwpJIKhakcciim5BFEGZGYnOEHBipVQQPCq9pyxn2w9wn+amrmDRdLS5K6wJtseOG7T7jx/T3FuYJD10J0FPPUmbDQqNvy7GI+VIbyqDvB41ht0plIm3fmalJGmHv9fg00iav3D","layer_level":2},{"id":"bbb3be69-05ad-406d-a88d-61ecb1bfc3c8","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"线性回归模型","description":"linear-regression-model","prompt":"深入开发线性回归模型的技术实现，重点描述LineRegressModel如何通过最小二乘法求解最优权重参数。详细解析Matrix内部类的矩阵运算实现，包括矩阵转置、行列式计算、伴随矩阵生成与逆矩阵求解的递归算法逻辑。阐述训练过程中训练矩阵与结果矩阵的构建方式，以及通过(X^T*X)^(-1)*X^T*Y公式推导权重向量的数学过程。说明insertColumnWithValueOne方法如何为线性模型添加偏置项支持。结合代码分析模型预测useMode方法的线性组合计算逻辑，并提供模型适用场景说明与局限性分析，如特征线性相关性要求、异常值敏感性等问题的应对策略。","parent_id":"c1b6cc88-4296-4325-9fae-bc10127a3ed1","order":1,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/train/trainer/lr/LineRegressModel.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:11:26.148914+08:00","gmt_modified":"2025-09-23T18:29:38.306104+08:00","raw_data":"WikiEncrypted:vCTvL3JA3DBctyfcF+rL2ewkyccPwjyPanLqITSAaR/8oY35QPUS/J6q1N+AnsX2tRKQjz7SCzA6Wyjxjr7BEMd2v48jO6y949GSG6uK9c38mpLp2tapfCwWF9rWqCSFxTg3HL1/n/TN4nCswR4ywdJ2hUXX+5s0tMQKiDFe8l1Hqmr5tdUjyxqRf9wxflDqHtOtRoYTJlAQRVBB+unsgYd7WrAyJPbm0zNojq+oA8A3vI99sexcQpVXcbDHZ8nk4HDb2CLqf6RxfhhRs9vdbQXEfggfLueV+Xn/3Lfc6e2hVTY70DeS2p7ClA2PyAnasFwidNrWoS9noO4VSrMam6PCQxtnoKZ/ie1csn9OUMiMZL5ekELYp3G1yx1SSu0qhZP3Rv7xt2Jc59bqxeY8iovfO2C6Y116Y9fhZc4ObSC2m+36qke+3oNmUawXjay3PxjDJXZPuzmoPB2PwLme/mgET6x2DR7Ohg8ND0uUjvRqp7D+kdIF5FT5tS7kXzlAhv0swl1XNJ397IOXD6RlyK9rNDwYbg02RisMkvoza/L32LkLTSi/d6wK9L+Z6CPsTLahICszi72J3K4Fc0Ege1Fc9V9CUevWcd2G5ZXAT3qYJ1f1g7eAo8O0rMGUbS1gk0Q+05JKI3z2QmrmjM09MvRypL5INS76MO/wgknrxVHKVnpw21MQI8wYsroXhymeR2HwiELi3ldBK7sdma4ceIVKbTC5VhNjjei4WEpzZcYjlv2PyggX/STaYL139WlgZvvMt/uPfdMMZmJqklj5Anvl6LG3S2k2SZNr+aG0snrFtDMbrHw6RDNwQn6Un/FrUOBiuKGs0GK+e6QczJkRl2+ZWKlLiw91cKQsJVKjmO/Dm0gwFp90aC7c6rGM3DDOROSGkghIsAmIAC7FOF8itnAxT57ZNAfTbA90SNYuNWL0M9PWi1U92prcskiMYULbDRZoARn+Hev4SNoiT7eafwgV8z7N+KLMlGXzGoLvv9meJa7wk88tRvwqEAIdEqN6EkvnA0QQ6LHfBbr8ke39lbp2o3Q1VAX7g1rbuoCraFcBptzxP3pD3EquXED7jsI4GY6IhXgd0DjkvV/2pcceKTB0gFb3K95DmO4I14aeMlyNNZ3OneAnzCLRBTV62gxQEhbm2f1+nP/ndUAW6zp98ZMnpZy5T1TWVbv8KT/xRnJ/tfMmUFITiRIJkIVPspOO9/fH+OBFqlKaq/YHSyGBG99tXYkYYfowI3Kb1nFxRX9Wdg3wniMUUbeRRdcRUAaWaK3bWwUx+WOG0U7vkCflE9WjOySkTvbc4FeDndz8CaQ=","layer_level":3},{"id":"15db76d2-4cd7-4f9a-b9be-2a75461d51f9","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"技术栈与依赖","description":"technology-stack","prompt":"创建关于项目技术栈的详细文档，重点分析其架构组成和外部依赖。说明项目基于Java开发，采用Maven进行依赖管理和构建。列出所有关键依赖库：Weka用于BP神经网络等机器学习模型训练，Lucene用于高效存储和检索训练数据集，JFreeChart用于结果可视化，Apache Commons Lang提供基础工具方法。解释每个依赖在系统中的具体作用，如PtMultiThreadTrainer如何调用Weka模型进行训练。同时描述内部架构风格：分层设计、模块化组织、高内聚低耦合。强调并发编程的使用（ExecutorService实现并行调度任务）和设计模式（单例、策略、工厂）的应用。为开发者提供技术选型的背景理解。","parent_id":"","order":2,"progress_status":"completed","dependent_files":"pom.xml","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:09:28.951605+08:00","gmt_modified":"2025-09-23T18:13:41.396278+08:00","raw_data":"WikiEncrypted:w0CkdCdnXCcvlN5xOpiEhEX3U68GI0Ngj6azFMJo9xQD0Nwsj9XajeArLn33w436LuYJWl4xP0dT9zLNODhOpI2IFAi7bU1tz9apYGtFtymEmYZYBpEriNHgN8Q87E4jAPOShcAn0kcRSObCcK/vezBUp3+Ml2w6XetJNYoGDaA+JwFoDpbsS14DvGkpm3KOE56Zu3jAARWKlF2EVgPq8gQTex5lHEWyTgjHhxbdY/fLFZTWfCEOck0lNh5ItTUj9rSjiO8TG1NZLtDBM1gCbpW1qLqMN5/uStSZ9EsD8WhxMgjDA1mctKdsD9TNTrflunZiV43qZabk0KsGe4sC4sw1D3+XjinOWBTxFzzZHWF1DVoEwJNH2IFnEFDUfCQsf6k+cNE4QprykWA6ZC0cck83Ox1+padAGfAFuy0EUKognaFPuaIP9ak81Mi86S2VgkjLBYrkbucPX8N2KvEwskjgKZEbrh0OWPQBCP6INcNiSBFKmeG3Qd5BksouY2pQcy+HBo+oiTg4pDmbmQv4nsD99l60tJf7DY8E9gLIIAOpituJywkFgiyc+H8wwF19ea0bEwUEKkWFvhqMelCPguTJGnptRGsVjVpp0zBeyIgtWKFQfZ+0s61yispeIspkCQfrjSPv09UL3+ZnTdQUqFde2u4xmghNUDH751R1O/iURXpomoelTn2My9R4ZDfgZEDDFeyn7HGZ88K+QOp2SGkMwAP4oAZS+l08co5qkHN40WCh613sQbd3IV2oaYLpHGc5U8zmGs0zeldSJaapmTtRhFjaHDJNhMFiuVG0luXRlSYX915XFNEuaPZRn+v9g+aSFcxUnSD+52ZIgI0aVCAp7e8nGKXrheOuNjdXtn23K2mO1sqZi0tbH4FCs13VerRnquEeYfL5tG/55XJCXtlP5tujgPY/BcRcmp1UmFECh1lbg6TVUwb82qp5hNW+LsMH57Iy910tpJtFhGvZTHaLvSCwritSWhVhFFo6IvzvzchZF2rXhiyVR6d0YEM0mve2TIXtKS1gFrXiTBGOi5uwIy1+W7OPDH+Ld5zhsUZJeS9BsT8MapYB8lbH2ip4bjzDJSR0l4zyRxGGizFDYzJq19ShC07UmVPwi43l3wQLSDi9FTN3C23y+ONvYd//C/1MIUd9z/IrEFJNXVQe8GNWwdaME04qX4AcsTzX+PWAH5196enY7lvB1EK3gOZ1ywvwJyWntBzBWgg3stqNXGO8foLBH7T8kbVpl0jSHwge40QH56VtKoT09LmS0e4Q9NQ/ct8Udv+1uAmU6+zE8Q==","layer_level":0},{"id":"6df373bb-a314-41ac-aa80-67fe50be174a","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"BP神经网络配置","description":"bp_algorithm_config","prompt":"构建全面的BP神经网络配置文档，深入剖析BpAlgorithmConstant类的设计原理与实现细节。详细解释INPUT_LEVEL_CELL_NUM（输入层节点数）与空调数量的关联机制，以及OUTPUT_LEVEL_CELL_NUM（输出层节点数）为何固定为1的设计决策。重点阐述HIDDEN_LEVEL_CELL_NUM（隐藏层节点数）的动态计算公式：hidden = sqrt(0.43*input^2 + 0.12*output^2 + 2.54*input + 0.77*output + 0.35) + 0.51，分析该经验公式的工程背景及其在模型复杂度与泛化能力之间的平衡作用。说明学习率（LEARN_RATE）和迭代次数（ITERATE_NUM）对训练过程的影响规律。解释权重（WEIGHT_RANDOM_FROM/TO）和偏移量（EXCURSION_RANDOM_FROM/TO）的随机初始化范围如何影响网络的收敛起点。阐明ADJUST_FACTOR在训练过程中的调节作用，以及MIN_ERROR（最小误差阈值）作为收敛判据的重要性。说明MAX_RESULT_NORMAL和MIN_RESULT_NORMAL如何实现输出温度的归一化处理。通过代码示例展示determineHiddenLevel方法的计算过程，并提供网络结构调整的实践建议，如如何根据训练数据量调整隐藏层规模，如何避免过拟合等问题。","parent_id":"f19da748-27d0-49a5-8591-9fa53f411bb2","order":2,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/config/BpAlgorithmConstant.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:10:01.66251+08:00","gmt_modified":"2025-09-23T18:22:59.695437+08:00","raw_data":"WikiEncrypted:4XVDqbItYZlkQ5+gGA2HvPkyp76Qga+Ci89k7Q+KqY0W+DQ9xiIM+9aW14EzKdSAqIys6lN6VRQ/io8osUkV0bEJW9ETp/CrGYWuPfXIYmTnRBFUjLt9QpWb2OEhuIAmAMlQuW4Lfj1RYvuPr+RO5XOGgRiVOLo7/9XRVUU2i5/Qb/P9yhSnUgmY68FGe52mcSqfYaepZLJ3+/8s9YFMjvMx4ScmMpz1WCG7jQ5+0bB0tnW9yqO4Xkgvk83FCBaLK6mO4tv3Oxz1Gqm75J6CsRqS6ObJ7se+PkBFpqdoD3vQWTLUILo1o5mOhCBFxufBAuAMHNLZATjyedO4NRkDTDdPVknLoyqdTr5/6zIaBgI6FePF9a4G+P87BKflgG0vKRMfNQGUtKYayi+Xbec9BKz5xon6Dchir6tOjArN9DWfjYUY8idk6lldor5WrWlDdm9j18ioImc8cmoyKuOqzIfW2j9GQXEKfM3ELpg82s1FlY5EEAmS7No869KmVUfMHC5o6JK9OxkZlrQ60nS7H/0WwyWX64l77HlvwfasuJcZPnAApKubYrO1ke4iybMml82Uu8qHm85Tqj076E+A/0F13H2/i6Tw3/ciAa3pkeKFl4LgQa43UyZgh/cSwiLaueee9FVy13k8aNQuh/ew/OJMyI/QVMe/DxGLk1V8fRC1wVduRpgHcG2z6XH7kn86QCWa3En85+hTU3I21LKoRsLvDlE+Riten1/8gck/wZQ5vEJJ9Ow7asgE7xTvvN2ozauY2gWszNxoza+p7M66GxfLpGr7e0cjrQkLL9zQ4IxG5cXre1HreE/oKvk6pBo9yHgiayOSK4iKt8BsymJnL1L6RiinlGkU1koXM31bGJK6pqDqWKZLDwyo33uc4gPnjPW+KVkmk0UXFcWq52fmfy1xzXLEACZarOltMmvMNHcJRMbM5ZP1LYmPzu0B6JbP2v1fyeu44KhC0QR0jtd0qGpKlpFYrv+5CIUqvnDWD12hcA0b1uMU2ipeqbq9h/PUp1LLkFaUtKC3CYzWWRKRxktt2FfssgAQKBBFzRPhGbfAmQX1Dv49dad46lg1aLxTae+0SI+9+DGt0VfWDkeIc3kxnMkPEA/ujvPpRocbpINWR1//ENI9eWnLZoMKOTwbJa0nj7ygUII1qvkL3Q45J4R9fhF0vmvpj57Qat1W/ktMkCVkc8KzgJIxLx/B2tXhgX4IONHnWf8kD8WnZVhJ3qpmPDA4Pp88NVGPM5aK8YBR2mwwq/NjhjmelkLMjpmQ0ihEeZ6Y77cFHZ47hWZOXo7Jx/AesV+b4f5+3+bs+HlYK5Ep7kdh7UA2tID/ik0zawdEPa+1/ZlfIbXhKJv97zWM3mqiXCqPCSEiG31K++X2R+6zYBjWfh0rnviboUoCh0bdz+vd9BAWKAvAUyVkOyU+Rad1FYJpA6K8t/DeAzJeJmq63bs70qLkf4X1uebristZeBmHmoDMB+NrYClRdGtFE3Ti8Ym1ERgBcYLHxJRPi34sdFBWvpLOFvPu8FRY1UYtcsYlQmuF9nUNRXv4hwvle1Z/PdoZ0dctFUP+xJ1TaQYO1nyDChf0CleOmHWIm6mqmuRwqBJoP/myTejS0iFAngL86kpiI9k/wlEhv4ajoXQgyXqJu34hT32hEVoAjsis27c0zFeJaxsZEOWU5Zu2lbojZFRuyNyxMZbXdrilBD7f5m71K3UcQFrnv508ve1wfzhevP4EuOwiNcjGEuYUl8PhAwyhD17cBDaEiSY2/bnt27B+9uFjNqmhJcf/peVEM46xev/FoKo5Y5iX4tHiQEwGYtCWdMtv5V+rG17QDuKI1HrFTwlwnMsnsulKsVtmNc+8jQd84Jpax+SMeFFD6oe5VOXi4MsbOGoP6huUabaBOFqbiHbCdD37pTBLQAmJgxymfrH2NFh3DxFNnO/1oXr9e9GwJv04ESfxrW9xHskzgzVp4lSbmMSPifdmmOT1kqrL+xtBnhEiYytVlHPZwmGwvhiusZGmdF+5uNjzUM10AZ4eUTXDuJWHYSMsc1IfrhpgIzBWMbNAF7EYeGVe21T9hpgggCnVGns+VteVdEPhtr4/MC0qRWDZ+CSd+5Qn1Qe1NiPdb3MGZdsNkm1m5qH3AF8i+VvwVLMX3bA=","layer_level":1},{"id":"741f286f-7be3-404e-8653-47f8d4774e22","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"评估模块","description":"evaluation-module","prompt":"深入开发评估模块的详细内容，以Evaluator类为核心。详细解释calTotalSatisfaction方法如何通过DataFactory获取用户舒适度函数集合，并计算每个用户周围传感器的预测温度，最终累加得到总满意度。说明calTotalPowerCost方法如何根据功率向量和电价常量（POWER_PRICE）计算总用电成本。阐述transform方法如何将Solution对象转换为包含满意度、成本和综合效用（powerUtility）的EvaluteResult对象。结合代码示例说明评估流程的数据流转：PowerScheduler输出PowerVector → Evaluator计算指标 → SolutionBuilder构建Solution → Evaluator.transform生成最终结果。提供评估指标的业务含义解释和典型数值范围。","parent_id":"0ec268dd-b05d-4843-8672-e1700ac7b2f6","order":2,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/evalute/Evaluator.java,src/main/java/com/leavesfly/iac/evalute/SolutionBuilder.java,src/main/java/com/leavesfly/iac/evalute/Solution.java,src/main/java/com/leavesfly/iac/evalute/EvaluteResult.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:10:14.781419+08:00","gmt_modified":"2025-09-23T18:23:04.180741+08:00","raw_data":"WikiEncrypted:/J7fM+XdsLpljNvkXjrHrOM7Gd54iTPd/Zw0W4+Y6SHQxT0sXsC++HxRINxR0NbL8F24o5yzP/2RKy+/WCMMPaSidMmdawC7T7qKmFfqISKI+rZljmKCuPqkgh/RmmDAuxVsgoNkUp7XIzKZP9Tg8TG33wK4ekp7IzHhXzWIibKGjMynNMzUJ4rhW+cyOKcr3w5Jiiw0wexcm4tQnmu8yG8vl+7OjKtgT2WcyAOnbtjhdZ9diKeFk6ADVd4EeaWon11tqhQMkHaZOwpaa4ATqyAGzCUKE/lkpk/zCiBb2KWPHwI062BkUR4Nt1dNssSyHZKtpeFM+cCyHjkQYsGojaLH/U75RXDKNGR6b00w9e8luQyD4HTEnmkDQA7db4oRWh8HWS1kVkO/c0DMuWu4Pprm2zUgADih5avl0RgR7LXZ1ybXMvdFhAGkvVRwUlrBQwbLS7FtFLlkHiNXNRI0Z8okF908eL37elYYHmpQnlX+Rh2Y1p9OOVesVBRwcupwu4JDFUW6vNOidr8QZEA5Ivcv6Kl2eSqGD8jHlGvnMYaTyCpwOn+Oc+/5zG7wEKjRhRA5UliMqMR0Eg8jrKJI0qJ4F2XU0spdwi3yVuT0jxB/0tF+mbT4sMmmjjPnbMqSazsywBbEeq6LWKiYxSj8kDHnaeUeFXKSuAsVQdjy/t0YtRJNCcy/7cbTy1wuPQp99cAlmM2bhr2yaqxurq0TvtDl8gqHmJ5EWHbe1rzkW5Dd4mTpobzdDZ+effRCjXFYKaLnX1Z87EPAEOzrp3xtetj6ko0kA2rFE1oIEpXB0IGTdvz+EKmM7uETI6FPOsBG9SVM7EE7lIuMfrq6LGN2A89rRaTuvjiYWZM9QrFJ+LN1UPAoUy7LURo3OuOOsc9oBJFpBG/nDGBk8JaQf/fx/HALkvnG09k4t4TvmngF72bKZI+aEOmozVpsOqb7v0HuiH+MamBX5llsELNDDQrwvcM+10r5uiVY1e1NqTAI7EUIdBa3wddXJuBm3ovoXYYnMN6xSxJGfDmXb/INJJlreQeG4X1aQcHRH7l2XBgH4ylmotXDA4kRcjdI2+rrjcmOHowVOPAVRcWSHbWpKwJOn91O0qIgSmPf959I79PFKrPprWAgo/bolv0Z7bvsa35fw74fkh70v1ER3pHRBNmRP2p+j1pi677D8EC6jXHBi2Cw3jsEiN+Ha/QJTz5TqUciqWsJVdQpW1qZJpGEnyebxS39YtETEjewxarMind5VP8IO9fO00e+X3Cp/Qem/MZM0kwL+IWrgy29ULIyylsKx5wmPRrUXFaIDsyQGFUnR8mhpX6t/ecEfJ7omtnZ4TnjIoTJXaTk7wBNmprwnQrqARDLRilgf15jNBXqXDWi0PpRP0fRUeZLKXNU9hCWC5adGM46Mr2CO4xPwuojyvlCjIF4gij+mHNYeX8A8zUK1rGko5eBbM7WCTyNqwdNc1IwD1RV8PnRRiSMJpX7Zww95AvFyjgQMceEZnIgdrSXxq0GAfOXuLhZy9fehEbELJNgtJRQh2gzsjGMKEvax2EDnqcj5/QAxFs6xw6FIq5J+s69oJiROz3eUuYNTJpXRipgNbxQFdeQFYnyF8cmHuYJiTIv9gxGvfmWglXYcZzrMjRI8D+/R75rzvw1kEZ0PlEY+p0lWOstecCmt4zp2BZPylGI01wIC05uDSZKXHBC2Rw=","layer_level":1},{"id":"c632d378-cf8f-4bb2-ab88-93895973b9d2","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"Solution","description":"solution","prompt":"编写详尽的Solution数据模型文档，定义其作为一次调度计算结果的完整解决方案。说明solutionName字段用于标识不同的调度策略（如'PSO'、'ChaosPSO'），以及powerVector字段存储了为所有空调设备分配的具体功率值。描述构造函数如何将名称与功率向量绑定。解释getPowerVector()方法如何为评估模块提供待评估的数据。通过代码示例展示如何创建一个名为'Baseline'的解决方案。阐述其toString()方法在结果日志输出中的格式化作用，以及该对象如何作为评估模块的输入，贯穿整个评估流程。","parent_id":"a2b6115f-c729-436b-96b9-5e2153f96a70","order":2,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/evalute/Solution.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:10:37.162981+08:00","gmt_modified":"2025-09-23T18:24:36.634747+08:00","raw_data":"WikiEncrypted:B5xZNOlfkoWP5xoFszueJZi4IWL8/9i3TpHcio0QcFxMWRrrLUsP4RWoCEDrayfrbvqveUPjzWQSg0kXbewkqAhduOxUyHT5QKTy+3nBaz04hLQ6LKCZcg0pexL5sMHtebxEIu9QsuIIo8qKVxhMXmNRK5SameGS1q9QMQCX6gSX0/vwQ2Z9rlH6a69GI6yTo4qb44MVbd+fXchGjjTAmdtuXkyitQo5gZP8Omopq4W710N3pbBvbT++LdxpPgnXkmuSPelo1ZfWan0NikOSoEVd/ilvZrF1Uy3kwHTck8UyXAvOX8a6Uc1lRQd1eIZxD8vc0oP1sTF0VB3paEINxO1HKt5MebKlyG1xyVZ2PuBQg9m+F6oWIWEfxh7bBsAu22JG/Ohu1pbQMnPqnGtncP6KGhgpa5JHmdVDv5gz+FkEFCaI6rywkWf8/UrG3B2FBF8b2JFxZBj3wsAeeM45xJgGuz7RpJq2BlxmuCYpwHSBUb/tDPnoDWuMB/kHGSDq4l1837/jT6sn68bx08hmpizxbU1dKUz3cAuTtiDBpTjJSXbCYYjuLnQA0n9P9VX8kpXWeuLW5vz9m16L1OOQkIPgmAqI6LWXq/OPPhk6ghxVI2cwQwpV4KfmuWusXcYFh0JLRTiSJWGOXbmfS2tzYs6Fj5w3KCEFiKVdKR9IcLH+U18BEEZ8aAPxaWthSDLuZqfIS2IOvrzTSabOhg+H4bIXj5QkugAiApjWEtU91sHlYJCUrAk0vN/q8Tu7fZDPXOisorlWFM7Ty87jueLGzCfeZt3Ndvjr8RfzNhRtBKKQB7aLvm8b2XKl8RxFn6CgWuxhRl5s8Pr7lnaFzHD0IQ0cy2m5eJICcZ+KDMN2ZMw3Ibw8iPdWs6wFuDduqcA87FGc8FEkwGSyQCyDtwFBfwZd0QTZYapfO5lE1IoVTqq3hFYvqaUtYZDVwJ4hSX/GUNJg9KCzxyXBaN+RqLEwh4zyxNPBfx8f0FknSWIw4veUpSKukJ/yf8mlYBQBzAZa/wFOECXNsBGw0eNn6wz2/VDeMLPO3iTzucBZqNOAguadyNZVg3IvMJ6xZ4MCcpWAAc+PSSqx4I8ZfbmeH5kIQtDRW18ADsxKcYnjKAzWp7qXCZiB8IF1aqEwcaUmQEoIpomGbOC3ipbhyj9Za0L6QCdQ5xskCELKNXGy2V1c3VDsVCJisqksjaFx6O2QKunHv0PEYRVH2hWDXl9cUcxjA0jU8zqge26h+JzH6SqHBvU=","layer_level":1},{"id":"d523bf51-6334-4043-a072-d61da553292f","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"存储管理","description":"storage-management","prompt":"深入开发训练数据存储管理机制，重点围绕TrainDataSetManagerInLucene类如何基于Lucene构建高效的索引系统。解释其如何将IntellacTrainDataItem对象序列化并存储为包含传感器ID、室外温度、功率向量等字段的Lucene文档。详细说明fetchTrainDataSetBySensorId方法中布尔查询与数值范围查询的组合使用方式，以实现按传感器ID和室外温度快速检索训练数据。阐述RAMDirectory内存索引的优势与限制，以及IndexWriter和IndexSearcher的线程安全处理策略。结合makeDocument方法分析数据持久化结构，并提供索引性能优化建议，如批量提交与缓存策略。","parent_id":"99e671a1-2349-49ee-a8d9-5c00a13c6a68","order":2,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/train/store/TrainDataSetManagerInLucene.java,src/main/java/com/leavesfly/iac/train/store/TrainDataSetManager.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:10:46.40768+08:00","gmt_modified":"2025-09-23T18:28:29.501663+08:00","raw_data":"WikiEncrypted:9FtCQC0DeAGG21+hIR4h+Dd+8XJeekoweoDR7tBC2uOo5RNzHKFCvxq5Iktjn8MQM8j1ixYZ7PPJ0qiibSTfzGI+8cSKE/oKYWaSnS1V7e1hkBXMfmFUGS0/te6K5yB8WSy5NnPWS11JKcwveJpY0f3kbK9ikaIJCN0scFmRDM/nM7Q1w3Bw+OdluLJGWHpZ60dnOkSxLQJrJP6pk04Vk4UUl+Lsf3GL3l9d2rPSfb8mmBBfsAXWeoBxzqKbLQtWEQlhTYlPB+E5LOJTXMTmaaM+uH7B08GDIfRyiKL6UZbSgHeG3AQllREVmb83Y1L4lApw8fnxlU5LS2hH5eMg+ga3Y1wPHloFwQdP6SBGq+9/2y4HPAv5RKn9O0JnsG73UNP9vmTNK9xFnbATpLgk9FqKg7GiY5k0SPkrZbRG0vD/4vwRJc+p63kbYg/5HFd9hP9xc0S0bMIoTGfbq87WMhtsHL5wB0Fb/v2svUhoLc2FEbCU5zZ/gSQZeeFmjinTiGmure1247PPiQL6s1sd42TnudrPo3xTsiIf7iAs7EVA/dd39Yvvzn/mwz5+bL4PHiP+VsRqaNwcy75A4Oy51m96Ve2fkrOrl3h916uZxuMLKy7/SVasaHaCbcxxvFunBD2HqSHUQ3fgDGniK260msfulArSjVmTF33sjP8Xrh/XWAJ+X4Uwu7k2suRNIJZlmfOHQ3jozE4aNx4H44n5Vw9f03D+aCcwnY0XePUIy/bHUOllMzBESnq9mVdqYSvXIXBQhoTI/2+dGjKrx9VFP4+mEfAt+wEaZ1iuRX1jv/VQ+spvqlBhpBA/PH3OaqWJeeNHRE7coLr/mnN7/A1ail44N5tVK7KHoXkeSudLJbnWXaVm+wWsqn/l5TkiEn6YDSeywxO8hkc7vBezzbaW0rOkk2AtzCmfvFVcPgcV8MfkC21Fq7Dx9jkaruzfD2LcNsnZHoC0nXyExx4IpJIdN/3tBox9s4AmpdNIlFoPxp/1FRN2cJE/TG4actR2gNb/hgAz9QZCHEYQiCECduXKrYpvS7Z9tekc7RDVBvqMNWuLBJqQo2nSuj0gIFdze0g9s9zMP/5jIzKTw0KrMRYdt8hl69nrY8CNtay0BGs0tR420D+o/E0QbGjJQYRBy4Ur0+rSO5I7wTt8gQvVAcUm0HAYFeiAqMTBr7UyH1Zf4+v5kzepNxSlRMxPDnZet78kdQRlqDnVx9IqbRy3q5Orm+KwLt5jTINbxuGyJHvL2xKdpIR/gZs8hF1lfESV6RoLJVWhnbAcbI2n+cmoiOk8mp37m18yK9pdFVpV4ac8j8Id96ULVKH9BizSS4EUkjm2pgiok5+Wxv7p/3HjZPoej+VlLFGzSZzyxThETGTJTWv9/LgyDPw3XScbIJM80IhbRYootStowjNRO+XwqItUFw==","layer_level":2},{"id":"eaf18589-0cc0-45b2-98b4-239c39cfce3e","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"用户舒适度模型","description":"user-comfort-model","prompt":"深入开发用户舒适度模型的详细内容，聚焦UserComfortFunc抽象类及其在优化目标中的作用。详细说明该抽象类定义的calUserComfort和isUpMinSatisfy两个核心抽象方法，分别用于计算用户在特定温度下的舒适度评分和判断是否满足最低舒适度阈值（COMFORT_MIN_VALUE）。解释子类ContiUserComfortFunc如何基于用户偏好温度范围（UserTempRange）实现连续舒适度函数。阐述该模型如何被Evaluator在评估阶段调用，将功率调度结果转换为温度预测后，计算总体用户满意度。结合resource/user_comfort_temp.txt数据格式，说明系统如何通过DomainParser解析用户舒适度配置并构建UserComfortFunc实例集合。提供自定义舒适度函数的开发指南，包括如何继承UserComfortFunc实现个性化舒适度计算逻辑。","parent_id":"c067988e-9ede-4e6b-8e35-966cdac55ce2","order":2,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/execute/domain/UserComfortFunc.java,src/main/java/com/leavesfly/iac/execute/domain/ContiUserComfortFunc.java,src/main/java/com/leavesfly/iac/evalute/Evaluator.java,src/main/resource/user_comfort_temp.txt","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:11:14.591857+08:00","gmt_modified":"2025-09-23T18:28:49.44627+08:00","raw_data":"WikiEncrypted:avus8+fk7Mk/OhQ++5qWiusfnwccfIZzbyyCqS40Pbxa7+KPVq+vxcTP72SMzp0suQ1/NxBl3rc0zG8WNvnX++gvkBFAjOAOE70XGhduR10uvHvAjaMifZCpep4WNN0K3LCI3Jj8mwao+hupl60l1voFiKNYJxa6PKMtQf0xtcw8fkidGQMGtR4yyzhOQex8EaFgW6i46Se7lOKPABONmoPAwhIge1l0nm9C9ny8ZdMIgJwo1rEuLag10Q4fJ2IqvmBAbFn0K7iJQj4tw+PXLKySpIyWr2UQhb39FaB8VjxpwV45ngBgLh5APLXEv+4NJfA++5Jp1BmBzTEWbGZ5MnVxxt66OpMU+GNZbjmqz1sYnCD/hk31C1OZmYdX8iKt6fJXivThNBnewLM2EOOreuUj7GX+xcSl3Tmyp1mBDO+LKpFLC/8JgNtkCPDWMWD2RuuOBoZUrpT1+p/NkX4ry6n7XijDMrT4tKcq0uuiauvTs9CJSa0rhcsHZu7LV7B99j5xr7W3Z6d75HYzq7g4dEu4QkiXzvFKrlXfAmhG0fcEbx6Fd8aN1ONAzs6Y7y0ICED4yJ47ACnJ5KID99n8J2AxQI8zEy23leFEsbJRgsmxVa8+MkZ/9gykGMAIq/VpDIXIIIWIe6S9bpVhYY/GwuUoMg7UehNcS5y0bh7HcEMcqs0LZpX8i373E4oD8ivuU/guCdkz8kLDgNJNxt70pE8h3zmrGdf2FlU+HDU6np76hjcgdpkhIkvDP4OAM6i7EUkesnTxm9R2e/TUz5KVHU/Vc9uTQaHSUCcK1XdSOuTLIuVmS18wqLkb2ZAlMZKSLjf5fQBjQmqRAvacB+ZhgT7R8bNMdLial9tr1sSw85jIjvteMGsnPKKcOPJNdCu9sf++1gnJof1GZMMwBRaYwU+vDtoX3AgF6UJQRo6rLvHRYPYoum9f5+LwGxV1LFtD1OwcSgxZacMSjNPBasrXo7AvIIhd5azJOX6gQX9h9JyeOwG+GdvoHIN0fpDyFbRFxEUQY+/gZgndXAGnazgklHGr+lDXdYOHQuSpo+kuMTUdN2DcnjNTAuAcIqTkoR5c7NW3CxUmxy9damm4Cs2dZ8tl3kUQwJ7O2oE6r0rz52dZJ0qCICnbmg14X4Z+Qg0O/RmPycb1DgQ+v3nbYS0I1vBsQRhCKpYvIsfw8c+wP1McMa3vBpY3SusWotbY+JBtr1iVIEzF5kmv5WgXr69Rk3/ag+NZtv8zRIgLQSonGO3z9sMvXoP2BSmLs+sn4hAna8IrCf1EwDT9/TdJZkIqj4hED/zW1qY5zfwFw2N9uryRDhv7lpVKiEknX1ckEPQ3Lheqxt4Nsi1wKQbG4Mi4p8EJWVPolf9CAIADq3NhRHQPRUT46LYu31I+kyjhRW0LPV3rI7yV6hx8BDARu25XXDzNuGxCMTWhD99M/iGoja2BhPgxf58mArNwMEQfw+dSdJm+pMERVaZCK0JuEeel1GJlgTt4ESB+jNEq0n0wfK7NMwd3tL7P6k9YCLPbbXO7b+JDaFyAceiy/nKf6u4Crf4CIUbQpHrzd6BGP//iFWg5fr3oBdjy12NfxqQpZHxLkOwH3iIwneD15o2mTrErFrWuY7Jip+evLD2sD6FAIgi/kJeB+/7NSNSjc5mKOGn6NQ4RPvApLkmezYUPSDIu+hPRXgJTH3VlP5R4fl1cMP5zwaZbTfNczspIorYc4WnkqUNupWE92PQ8a99ggaDdpuL6xBYBYLtJ/oGyJsyrRrdjl9kYY/Jt2U4oL9FjZpjq","layer_level":2},{"id":"b89dd605-cdb7-46d9-9acd-e305ce9b74d6","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"训练任务执行机制","description":"training-task-execution","prompt":"深入开发训练任务的多线程执行机制，重点解析TrainTask抽象类如何通过Runnable接口实现并发训练任务。详细说明CyclicBarrier同步栅栏在协调多个传感器模型训练任务中的作用，确保所有任务完成后再继续后续流程。阐述构造函数中各参数（训练数据集、室外温度、传感器ID、拟合函数集合）的用途及其线程安全访问方式。结合ModelEnum枚举类说明系统支持的模型类型（BPNN、LR等）及其扩展性设计。分析run方法中从获取模型实例、执行训练到生成PtFitFunc拟合函数的完整流程，并解释异常处理机制。提供多线程训练的性能优化建议，如线程池配置、数据分片策略与内存使用控制。","parent_id":"c1b6cc88-4296-4325-9fae-bc10127a3ed1","order":2,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/train/trainer/TrainTask.java,src/main/java/com/leavesfly/iac/train/trainer/ModelEnum.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:11:26.150684+08:00","gmt_modified":"2025-09-23T18:30:32.884708+08:00","raw_data":"WikiEncrypted:KV52Bv4ONjB4UC5EXzYV5FwC2mNNToQccfWu/Ll/5o2YG2bWAWOGgU2H7FoJYU2TqoEIIXaTHB3ODhKP6uSVdqIOG48vZlJDhj7XupELtQTtyREKp0j8A3h30J9RAqAp5pO2PdcO9uisPBG9+4m8X9AYnNAlevAMimBNl43EKtwKzK0ntpQiFcK6n+jzbX8iUcrKzBVm3bsso6MTF1ehSNEh5bmYG09BLSGJCmtRQqPxIzv/HVja1uiKAHPbn5uFcwD3BxcHPP5RAovNo+CHqUYrbl1EMqwRcMpaeOyuk5Dn5OIbe4CgVEc8FGxl3feiGno6Rd18qjibkyEIEZVur4ezzvMPjVATtIyMQGHJHh13Os9g7JFQrf1tuphSQA2dwJueGQT1ZLA1UPBTO+k7w4Dhe6Sh7jWDcp/ZBvtPJRI5EYIXpkJt7dFLyKtW2Kl3U8PuQqL0A6PH6vh5Hxiso+QJbZop9JYhM8q2cfEOYeY9ho7WYuZg5UYrgqwK3hi63lBoD5zUuRBXOt73EkM1DKFMODQpTPkzxGOdsOd+VwsoU9P1bIeotrlM9LUVQ3KoiHB8Eg4C6NNNTtgFmPcDeoiC04crdOFAc9FbTMAK1sDaL3OilkDaG6+8uC8NVXePSn8nX6N3CiEMEsARvnbDc08DIvDSxB5LKi2elLTySSB9B/6H4jC6AzHkmx0cS2gm4ZDTaOWdX+X7GNboHZX3c01Wwz6QX9AdpBV3aZPzaVzpRK/uOcKPsp0d+YkAJC/kDCMRUHxrp883I+f9Npj8pnAa660CmLIeeTgsta6iBxGA3kJp5+vDDIigH47k2XSjcWG6bpgut70cuSLlTlzNzLHBUwi+FnZSjDfElCYDmGz5rGhqPhwihPqbX9Ii8Pu6+cbFiMgXE4vP7n8sYM7Gh1vfHK7psLzW2tT5aCQl/8VFKHPGkO1QBkW1wSVBL2hJUau81Xs76SBmvqEpOL1BZbR9yx23eEUdCRItEKr6dR2N0WRL0puAtDrisYyzeyyKFypLHaMap3jQ2krLZOxCLvRgv5PQRgWrg/tDgr/rPwSIDSvrZyyVvud/Kkh17TN6Ud3lj5oXL/oi+D7N4p/Y36L0X9rXa+sxzeN4CfwQ5UydX3vNJalZjAedSX7i5gSvZlhagEp79bCuua00htQJnegt5Ulg0MAWns2UnhTOk35T2Iqt5xM7t56eZ4NB6xdweCfvQ7ItRBFq3GIYzC2wE/R7CBnslrc2gQ1OXOdWW68dU2vpZCUKLvQNmLFCSJT9wiohTYRBYpPTukfR35GsuGwc9jXICey4hV/Fx+Mf+lY7Am4JUxBpsF997Tt7LA2K1alSNYqqZU5N6Jrhb3YSPjXvAlZIx5TAuT9TZ2YDLwWwr7oNiVHD3YW1ONAoh6cN/PCWyRPNi/maPYo5nyHdK2/6GfC2jLLGxGM+LHZvQ0fKbojcao77xDvf7pkyIYDZR3ajbjYL5vbGR8rUww6i9os8cmLq1PHeQ5iyr+LUQrH5Eca3w5+3t7RvmLwsqpMN","layer_level":3},{"id":"0ec268dd-b05d-4843-8672-e1700ac7b2f6","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"核心模块详解","description":"core-modules","prompt":"深入开发核心模块的详细内容，涵盖训练、执行、评估和显示四大模块。对于训练模块，解释PtTrainer接口及其实现类（如PtMultiThreadTrainer）如何基于历史数据训练功率-温度预测模型（PtFitFunc），并支持BP神经网络和线性回归等多种算法。对于执行模块，说明PowerScheduler接口及其实现（如PsoPowerScheduler）如何利用PSO和混沌PSO算法进行功率调度优化，生成PowerVector。对于评估模块，阐述Evaluator如何计算总满意度、总功耗成本以及综合评估指标（powerUtility）。对于显示模块，描述ResultDisplayer接口及其实现如何将评估结果输出到控制台或图形界面。每个模块都需结合代码示例说明其调用关系和数据流转。","parent_id":"","order":3,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/train/PtTrainer.java,src/main/java/com/leavesfly/iac/execute/PowerScheduler.java,src/main/java/com/leavesfly/iac/evalute/Evaluator.java,src/main/java/com/leavesfly/iac/display/ResultDisplayer.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:09:28.952173+08:00","gmt_modified":"2025-09-23T18:14:02.73009+08:00","raw_data":"WikiEncrypted:bpQ1QlMq61uqjeQzqQaeFJ8lEiuSQp7TFZGpUgKRJgb2v//1IL30VP1lCc1iZVco3CPPSKSrF1vzQZqAKIEsDWN9DqXdRr2So7gyVG1yPFz6A4jo7T78jpe7+s6SkJIX3XNPhposs/jqpx4lrdXJ4q6xsYmvf9RWdb53mR1FMb4zlGS74VRU7bswdtF/O9n404iFt/gS5fsLxQJb6iD1h5wy47UDF0MLuyD3M4FDjBIB9YW2EuwJG0DwDH4td9ATyTwFV7MVdKV6CgdAIFxEGlk6VkJhLo9GD+sBe4UZG2cTf04cTZl7AoQ3lV1+s+3pSmH1eCvO8w56EDjdvYj2e8gD87nyzCAU2vYswF1ov4N3oiRt9Mb9Zt7dW9F36Ewv/G6KOMVJVsvxCcQ8k8uXNt1QCeMpQhCp/1xUZiyQFPeZNaSghDercfDHE1hLT9900fjv4YNLH2pcRZNdSlJ5yjiPx2YG5WNP7BxDAQHQcrXlp8xT5bTYc4B2BSN6j8RIQvVUGwYQ8VNNKDe0aUDqoYycUX5osOTqCwpk/sZEbATx+hxJxXcbOFDDclKjoxyji9yUQnRqQOMqWikA3/19yGwb+9ug1tnJna5z6G4OR8zrjXscn4NfsB0x4f7eJ/XLA73DgSkd2n0a1rGyqrJ30tHJ5LiQokQd5ftROkBM6imESUEFd4MN7HxwFWUimk34Q5Tgz3xe+jIN1xITpNGEJmAi9CrP8q70C6qVDa23o+ovPYX9WOuMMta+yn04usRQKl5We6tSHV0kgTdSniuspaIDGH5hmSfuvWOzns20x+zwwv6ZbFoX6RKdUJthvGKfMoFl5IVmPBB/22fuAb2AKnYj7CgU2bHNPwVVFwWvCqIh5c09AkEC/gVxdUc/+BvsGYbA71dGWdUCR5oAW6vkm+Jy4NPxxId5F6KsHiHkH6kjSP0s7x6mV+3/UJ3If5MJ+9wQx6xBm+eb3+j/huicuGo3a8zURnPcJRIqz9wLurcW+Vdiad3V+vZH4J6i3OHMJXzBhnszYATsuwzy/BMIMP7DoK9EWWue3fLnYayujrppUJPpjIG5mw70LfUfGRXY2WyVmOrlFHm8vKWccrAzKzrXr+6Naq3heF5IApXz85nwaeUDHsjXiCLxjs3IUV8Bz+QVLWxyayB2CbHvkU2N1NyW+skcA1APRSwCob7NHJNDjfjHNW4mSBKkOxrVCncF9XF2Z8Lawwgl7SMTwDy1PzrGaJpZLJLTYZ4Fdg/LlDbqIcadNscbJVRPxgsvvUukALdANk+RoCxL41PsDN9Bz+YdLEnj1QYreC4kB/ldo8kLbw3yLfbvbfs3APJNEJO7J9lsJqklcY314VAGrdSZZ36EY7jYAq6rwaXtTM5nQOuBYEcG+3Iqd9QFFT82S+PyURWGdIh95aN6Etjd3X3zgvP4pkzUNInoHQZ2ft7lnGUKaYZ+SbCeHQPX088bxMsaNWZPfMTwkPnCwhcBfVnRD+QJrMosf62MavZx7Pedt9lPbxP4pKCbJV1sQ6CNeNTD7eMd+bJW5wFIK+CV7eaIcIUZhY+IfSg34TQFPwH55to4InjxeHcjzVrKpY3NtsFfluI6O2uTCv5Fz1dpDSshQi/8HVY5kwzopDJqA4ZpobDVnpIFUj219TGfnIEZ7qGe/anD6i8smthU4HyJJ6KycdXB7TFle52bSiMJn2mQhMDCAJm1WsY8/+04X7OJ2+md6V8E2Ag3N5qvfzFpTYviD65MJurOz6R9x6P9C635dek=","layer_level":0},{"id":"32f0e66d-c8fc-4cf0-a4f9-bfce36842a27","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"显示模块","description":"display-module","prompt":"深入开发显示模块的详细内容，围绕ResultDisplayer接口及其图形化实现。解释diplayResult方法如何接收EvaluteResult集合，并将其以文本或图形方式呈现。重点说明CurvePainter类如何利用JFreeChart库绘制功率-温度拟合曲线、用户满意度变化趋势等关键图表。通过XYSeriesDemo1和FittingCurve等示例代码，展示如何创建XY数据序列、配置渲染器和生成可视化图表。描述图形界面的布局设计和交互逻辑。提供如何扩展新的显示格式（如导出为图片或CSV文件）的指导，并说明当前显示功能的局限性。","parent_id":"0ec268dd-b05d-4843-8672-e1700ac7b2f6","order":3,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/display/ResultDisplayer.java,src/main/java/com/leavesfly/iac/display/plot/CurvePainter.java,src/main/java/com/leavesfly/iac/display/plot/demo/XYSeriesDemo1.java,src/main/java/com/leavesfly/iac/display/plot/demo/FittingCurve.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:10:14.782564+08:00","gmt_modified":"2025-09-23T18:24:19.261525+08:00","raw_data":"WikiEncrypted:fyg+ilga+Zcl367hKwfwxQIq2L6Q+X/wO+St4hyedRGSJNBPoIqMTPFyZ6Rttek/sPQVVqIQD6q7JqcRERv0g7Zql7gtlKIgG3NTH3kMWSlDkO3oQ7yn5wXb2APfkOcu0my5NvHnQPh5Kz7NphlpSkrNNCLJjTXeRvIljoeN8vE3oK0g0k+dV2pAcCfy0w2+fqmlV2CqGCy9DU6spSy6mbmlPxkhnOrMO78JNK1kRxSK+ipoQiMjXOxojVUd/JwoyYZm9edLa/v+dXCBdFOt39dQIPII/5Gn/mTQP+cC7c6V8JbeINQvMqxbQOSMsfBNuSBwpjpt4Dy9fm53vEj/UcHY3GbR5uWBbxHQ4nmeifFgvUvCqMtTd2s4OkfNTJFZmfTHE9s40tlh9EN1jZ7O+saOuDqWRNf068lKufkH3O19NGgEOWfttxBTfYm1rc2RB9AaCOswJl4JTbhqRxf+l9jpl1PWqZHyWjKOW6v4QkGhWux/OBvATIes2QcVlF6yMNQyV2AGeMxPWGwvfIghSSnv2325SVcAdswD3zUfpY3NG1tdduUNA2GCSHnnWaBAsYZjp2u4FMaLb3WK2KejuYA4wfrGYoR3EewAIZrfQ2jLox+IzYf9Vppxu6F1Jh7bo6bGZVRgFHqRbR21BeCRJCvANhz9mGcDsW+K1vZRJhZ/fNDsYwm50PVH4RfPxY6i4Zn62Y7kgXpd2q51u+xyTASXv5sq4KRmh3G1Bl5oQY7MmBqklKqx/khMpkGVQua0LsEh+irDvlU3lkd0hID3Gnr5PVDYkY76HIFZrYnenpcPs5PcaA2RREulVxxtUpKaU3PUR9XhsDlk9Q26RvM03VIkKIXfMyGXTi8TNxasGoQU9tMADoIJTjT1VBt8L0lGkjxOAO7lJvkPLOxIcLdERO2QBQj4eoPCD3WuNYWe4yXYzqOHhl40zTQUNAOANOLsF/d8hztlDhJSzV5TkgBC7w1UtwPeyYT+K19l85ZPlgiyk7nOvG+iB2pMEMb082Iz/UpQxkESTqIEP81YYlaAT2aoVW27h0OFZZhOwgNZntP60qjecDf+uvo4Ix0mPnFmMF9hPjqXdhjWmCvn4kB9X7pckgwzUOO0G/zn/finuJ9fZFBTEN0WIppG2aHZYh7LH807aZuYuXQlHdnUK6vCYtI1lz/UKSJLSmLkiPzfgl9+K0AWDtav619QJEm7N95OyGLrFhaYEyPEPiKJKmkylmkfiqdhLltKH2GlIDXVWMwQOP6Hew01afOxdIfNip+cQgxIotMT0s0snI+wi8Oc/Ra3+V5NbJjsTkLAIsjWy9O05UZCUN9vYf7Rmga55XWQIDeSxXJ2MyW69/V7Dwo8uHm2iKkkEITrjrubUIwHUaABD6rpjj+8OPWOfz8jVZ1xu49UzXOI6pc1KX5XJ4HIcttfA/MJWdGQaBYKBoYN2QS5+FIMm1m853K2Mmhn6wAJlr1m4g5cXHJEluMM5t2QLK1DsEjT8WLI9v5+Q2GcObj/daCO1NQLtIjwOuTBqN017yX+Vazj4cF9+VEDNE4Sp06Q/fTE2chYv6UzZdIoSrc3yAnZA7TWJ5uYjGpsa/V6CfaYy40QWdbO3ILCs1VNdg==","layer_level":1},{"id":"8aa51335-1878-4373-ae8e-9007022c452f","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"EvaluteResult","description":"evaluate-result","prompt":"创建全面的EvaluteResult数据模型文档，描述其作为最终评估结果的容器。详细说明其包含的四个关键指标：solution（关联的原始方案）、totalSatisfaction（用户总满意度）、totalPowerCost（总用电成本）和powerUtility（功率效用，由满意度与成本的比值计算得出）。解释构造函数如何接收方案、满意度和成本，并自动计算powerUtility。描述getPowerUtility()方法中使用的AppContextConstant.POWER_UTILITY_UNIT常量。提供示例说明如何比较两个EvaluteResult实例来判断哪个调度方案更优。阐述该类在结果展示和算法性能对比中的核心地位，以及其toString()方法生成的制表符分隔字符串如何便于结果分析。","parent_id":"a2b6115f-c729-436b-96b9-5e2153f96a70","order":3,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/evalute/EvaluteResult.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:10:37.16369+08:00","gmt_modified":"2025-09-23T18:25:20.28342+08:00","raw_data":"WikiEncrypted:/J7fM+XdsLpljNvkXjrHrM/rBJbAjKgZTB+yT6Xg4QL3Ouvmm8REoIlTHQRs90rAyo2Ulgm4ypaKYkGTsfKtHqWmiyCLcU72qrNiZTFkHFOL8hvTcYRcgdD6MDkutbEtKVkY665kImcX/dLYIzbcSQ7qsarPVCBK+d4cpTd5X16alpg24W9lU4MbJPpzVSfm5cL75yJlXUZ5ghxhVDtxy+gg42K2hlINm/LtpOz7HJ1owZIizqKLy5xpbOMcED6wo5CbFiUHjZPV6l7xsu9m6R050h6UcHWqN7tlLUACI98jV6rRiaFdLfJ5GGMdC8ZaGCPieKucvsNBuEV/vpGI09bf41r6NTQQRcVC3PQS8bvG8gVHNQ4Qy7l61U4uCRZNgaB0CqQjbPGdCQw9LJMORcbm3HeP9Y/XG01lWzvrpeG4pVeAO11NByoDJNQXE5pmqWzJ7Aa0ZcLs0SeluqaMkQGFamC08nvmS5eHyFURV+2rRoxVHHtuVb1QBjIGeew+Bt4q5sB9s/ejUoiX21fzYxBV4UvD2LTPCGFHLLDboWTeR4O/PfndhzQ0JhTDkl9nl4xenaX3alDBIjD20Xk0qcgKicZWOuMNHdkgOocas7dJcDZYlP4MeiPmu9Ten+t8KzOJwIpTbGkB7VnjatHiNd9dY3WrfpQ8Rpt0mbghxFOWuHhHqT85gdAzHAVzWxs3wZSsGZe+60TrCy7DNJmvFmABM15KhI98BEkjsDxCbtfnvOGh0mS6MsW1jstFJ5QrIqhzpkiOr7D6+HqARwpKCuhNTVSovUnlC6rG5TcIGk1Rmqw6IDUCA+WBIPeJNsw8B4sEMXcgN4AmT5bk3/JXvHEBVqfwp+ww8vWAfAYmDnv6tIdOBHwpO8BYdZc6ONK4wHiafVsqt9pjRFjzifkqZ29vs9SAPubny2yEisDVWGs8wCnT0dPtb6cHM9L+5U3KvsrMtQZAtIVBLIwSe0TJiF69IGwxKKZ4bLgO8d/6hPNWNKsHgKfCQEhXrKv1nJ3T/KZDCN17RMnAfwP5Iyqtoo4W0nNPaO0lqs1H2TbHhgSNd1k8WZIqyNC3Ya9hmkoETsKncvlDAlf+7Va1+AmO8zVoReIGYPx+49lU++4ekAx1s5+Cn91grla+2cxyGFMo4OAaqHT9V12A69FoTxAYSh8M6ogFSIvl6NmIRJ34N8pGVjQrFBGrDkkFzrs5WHc4kqBJt1F6XCt5mHfoLVFwbGcv0qDXkRq4SZnIB5IYWrib5+iJQGDDmUEsLxwBu21OasQcd2uFo5Dkej2Pp5YUbCMk1TK40f/3c1Sjr2PAptzBv6PC1jufrcabiufrYi6QDDpJf8Zy/pqdV7QZxLurwKestrTNbTZdl6cFDMmYYwjwv+cozOqLGFXoebmuc+ficWkZf1/a0a4rDeQddTOfyw==","layer_level":1},{"id":"f19da748-27d0-49a5-8591-9fa53f411bb2","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"配置说明","description":"configuration","prompt":"创建详尽的配置说明文档，解析项目中所有常量配置类。详细解释AppContextConstant中定义的系统级常量，如区域尺寸、用户/传感器/空调数量、地理位置文件路径、室外温度、功率范围、满意度权重等。分析PsoAlgorithmConstant中PSO算法的关键参数，包括迭代次数、粒子数量、惯性权重范围、学习因子等，并说明这些参数对算法性能的影响。阐述BpAlgorithmConstant中BP神经网络的配置，如网络结构（输入/隐藏/输出层节点数）、学习率、迭代次数、权重初始化范围等。为用户提供调整这些参数以优化仿真效果的指导建议，并指出参数间的依赖关系（如隐藏层节点数由公式动态计算）。","parent_id":"","order":4,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/config/AppContextConstant.java,src/main/java/com/leavesfly/iac/config/PsoAlgorithmConstant.java,src/main/java/com/leavesfly/iac/config/BpAlgorithmConstant.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:09:28.952611+08:00","gmt_modified":"2025-09-23T18:15:44.457381+08:00","raw_data":"WikiEncrypted:aC5ZtUyEKPSxjzg//aVllB9TGvdYeEh4zcG1OGQGWJSu3PxkyxpgGtdul/NNo8ohPZC8LtF19KfNK+YAVcmF8fxH5zCriIKa7TbqdmZ8hgs0YzjMZ2NXcPgEVuBdb0Sj6fEtnYeuoseCiKR/0cPh650dgEkyQYHDrosDuWubDbMjYpBDyMG3TGSgCQdMhRpqF1MCcDOeEJPXFFtKz0lLnfaUvtqOILTmTXyAxxc/1Cvcrnqn/Cvh9gAv0xSC52zqPT6b557XhFXosRCRs5it6cDfiRINadcnC8qpijgTQEBlAxEPMfHjAoR641r7uDUdOykAjZ/cbhR46SXh4jvpc2piEBNtqbZ/Se+ASvIh8VSIcs8oZZ0nnVgFU1asa53bgjcsRDL2h4Sb1vSf2zOFVYMhhpEr9240G/oshE+RmZxVe4ks/I/XaBRfNNZ0Oyml9uQmOfIOnJcS4l95pTN7Foc1uZKQfpyA1uP1P4rfZo5TgcY2KPIeM/7vddt6xsK5Sh7ox/3qhU6BZ1YBEF1USZrzFTsfydlomtcxBzeLgS9ED3wxcqf5ga5X9269loTG/oykYJJnJ0eYBGCabRITO0VVhyCVuw9B1Cqh98iqovnjcFN8KwDw19AwZPgRuE/VesVLzgo2tcCs99GNNlg6w/y3OuV1kPgiTztO1lufRyPGPod1ldfX/0kVqBc6il4oRDU5tvzhRR42XOmZgUbz8uXY0IfoVMlJewg99wNWt/FgASzVx4ShdWCfRC00WifNKtjIFeFZXESISjUwuLcQPRJz5/M/xVVx+3jEfzAe+ZYGbarxzk9+GUcl7TtdrD6VTH0Rm27+x2TlEcsAR+1MQyiTCpAKW/e/IOAEhNDS8QmhkSpxPqkQtpc7v+01uHealLraL50qGi2JWcenIx1jC1nbp1K/Vzd+62mER2OS2Kh7sX3HPp265nrdh53KE+UfkJhCotJsLL6/hqePjy1CS6f4j1G1zbanxBK6ip2z7YAoBTgm0LZ0Q4TardEsi+Zu2x7/0hl6SZShBeTcOpgTWglokKiqGrVSdGJSrdx5yEazOqEbrgkgS79Co1e+eBxgdZCNQoC9YlAFm0SVZTZe40sH1/6ZXaaIfh3u8G4/urqpfvIouAGfVYxFpsr72y4M7WaG5bN+XVXk/ixO1iVNF2jOxEtv99TesvOalfIZZGLF76cyYsIb94fBsF42KxmxgNrit8l3jf015U+F6p+7KV+mkZl7DGB120T1ePBq0ak3xnpVk37ANKzWbeGjY4cBjWzfp7ppIVJyGKgqqT+dlKCPUcRWFulWqY8jCn7XAeh3pwelM5KnndKbDalHfOuJDtWyfBNhCkFQOyjxrHetBK8f3LZmgp1ylcX7j5RSp1t/u54qDhubqgrYdHM4vG3rziG+pXP6HGIxsNr9ZuOd8a2zbbwqqDqx3bUKWPQst39t/GDLpi1+Sa9NY7vSvRf0KAYJUI78TRpNObKqxHA7pOE707aO15uSoVHew8ETxJ4SwRQ7zZXMLwkrhAXWSNziJIwG3mCvKDcojjSIuHYpdyH4KtPZQ79JdIL446g1ySSMV7aL/5/LgnvX0hvXb94cEt3TN+Vfx1jf60HJyjBqwuWF8QS8n9srmtc2Um/k3DFzZADqQDK7rtFnAmI+5bZO","layer_level":0},{"id":"23ec0fd5-1ec9-4edc-a92c-63953001f6ad","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"GeoPoint","description":"geo-point","prompt":"编写详细的GeoPoint数据模型文档，说明其用于表示系统中各类设备（空调、传感器、用户）的二维平面坐标位置。解释x和y两个整型坐标字段的含义。重点描述getDistance(GeoPoint)方法如何实现欧几里得距离计算，这是计算设备间距离和影响范围的基础。举例说明如何计算一个用户位置与最近空调的距离。阐述该类在AirConditionUtil、TempUtilityDistanceUtil等数据生成工具中的应用，以及它如何支持基于地理位置的温度影响模拟。提供实例化两个GeoPoint并计算它们之间距离的代码示例。","parent_id":"a2b6115f-c729-436b-96b9-5e2153f96a70","order":4,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/domain/GeoPoint.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:10:37.164349+08:00","gmt_modified":"2025-09-23T18:25:38.460484+08:00","raw_data":"WikiEncrypted:fJlG74I4yDubt6iQ4R6rA7NhFBPXmqMIQguHcw5iaIBOzLFJ0yeG24LBEMaMbrFlWdr7xx4FlATVd2ccX0gS64ckQLBxCLLcEdpFp626bGOA/0WB5sOvQt477b/LK2V/f27KyMal663Wyc9STVfxeghGeZv+hUj4xvlZmgQSG+LsyZASq1uO4lhPLV9pSEWIXXbi5glHPpODLVsq3iQYSAuCGgUZKl0tgke7rR7qSOvSoLkBKrrAQVLU5w0J2L8x+wPtFza0/ePXxSJbGHbdYRKAjDCseTUgc3xQFgRg3b7T1Mf3ugkNF0o2XXljjnIwQz4oGXHvyvvKsUWV8QlhgqoPMOMOsJP7tdS0ryjRqIuAtGL811f7LcpIdaUzXSTVHYB0xVKBsw0KcGiuGarCtJDpMvLjoDwG4b/IteBFRRXqttonugZIBc74Ihpe08EVpwkJBUzaHoETlDXN2sa7HaBv9owb83orJc08ncw8YfdEWgXcnvmdze8dbCXIE9g/DnW7XHWx9Ggtsl6HVVyGRpuHDc8E/LEoRfw4F3X7ZSEoVBrOzVfGRRfjd+vxz+SUPZgKa69VtmmTStmfNmXowU6mL6otUlQsbXDxXp52oUvyhNLu3a/nZJTtKXjk9ZmieBvDysv+x8Ag339cFTCyMh6winHfv/87sNkFaqpfO7exA/ZQABaHRwdds/fHDsFQjD7ki74pbRlrYktHicC3700oFbHxFHiZrPV4a7so6ydwg79oipteCnK1BhyInhGb8vOyimxAfVgIIecYgvLmCa1AHEYtnrw7pAL+MjheG0v8E8SXWsp64dkRhp9lOpKpVjTTnNAERqb8wTYmtd9CU7Qv+I5Yd2Zb3PakpFAOPcuTzTBV5+wczt+ew9f1lXGAXOO1n07Dj+aKUYAZ709NbL3cuyrywd8cxcaI9titcYX+gdMSYyJgKDD+BHX0wJu3cm7h0HbRHq1c9/vpbNe7nlOA8U6NKdvlB6NyZKk/B2oshGALgZUuaN5L2zeH6t/riwv+7v8F/duCpN9Gj+OwQw9xCAVUBF+9V8s+x3HzMbDgf+4FyNSOvrA6tcoHpkIOy3O/aYPhgG28F4AxRdyWjfTranI4Yg8Dqv51nCW8cClnLHdlvahrEalHkXFMBsnxkH4KE2Lz1NDU4t0aQrwjK8QMjx2BrQGZ7hgZofWbcOxGweAC1+6G6FZi30Asen3E4ZJj6s9IBGLwzGPnr92gLw==","layer_level":1},{"id":"a2b6115f-c729-436b-96b9-5e2153f96a70","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"数据模型","description":"data-models","prompt":"创建全面的数据模型文档，详细描述系统中的核心领域对象。解释PowerVector类如何表示空调功率向量，包含PowerValue数组及其约束范围（PowerRange），并说明其在调度和评估中的作用。阐述PtFitFunc类作为功率-温度拟合函数的封装，包含传感器ID、室外温度和TrainModel，以及calTemperature方法如何通过模型预测温度。说明Solution类如何封装一个完整的调度方案（名称和功率向量）。描述EvaluteResult类如何存储评估结果，包括满意度、功耗成本和功率效用等指标。介绍GeoPoint类如何表示地理位置并计算欧几里得距离。为每个模型提供字段定义、构造方法、关键行为和使用示例，并说明它们之间的关联关系。","parent_id":"","order":5,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/domain/PowerVector.java,src/main/java/com/leavesfly/iac/domain/PtFitFunc.java,src/main/java/com/leavesfly/iac/evalute/Solution.java,src/main/java/com/leavesfly/iac/evalute/EvaluteResult.java,src/main/java/com/leavesfly/iac/domain/GeoPoint.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:09:28.953027+08:00","gmt_modified":"2025-09-23T18:15:35.656422+08:00","raw_data":"WikiEncrypted:klcgW2PbPxJambbKMzvFtzxL0nPpsuPMPxr5hj83lS7zLbVY013R4TC8XNEUYbb5qxIyzNIzP0UIL5gcgWgb2Dl1UPDA6XbL+v9nl4c1LFVsKllzljsfhGoGS91HxmcYjIPuiNtSIoCrjcMJmUNpVt3IYOVsh123dzfyhIliPUgESw/ebqrGfD3mrfjd099mBeSN+uJg1WtKWzE8K5ouFwTSCe76iwUx3In0ReLzVgRVULgSA0C+I6SpUeVlmAICinBkSOMXhXMlCkr8JWwnxTAtOu1PA2fNZitqnr2F0lbebrXLtSZmjxHW2Sgh/ugFoTkvlG1AM1+qM+6Z03WOtNiDQpMi78FiL2euNs9+QxlL6eRiyHQZFMNxWuvQ+Ibrj+v6Fu4lO/YkZ7Qz4l84hvbyxHb6lxVmLgrNXukZjFbjuu1slUKm+5CD0YZVKoW5aQaql65t2ort5vA6VqDBBoC8zprqPJVu3TrUmG1ll10En2RIdju0NYuS3/p4159qb/uNc2jPF4Ll9T8IwaLXoDXqdvPasPXYfxUTycLXdowi9QSLOEJDsY8tLIUHQF/tjcyOy7VNNgwllKTd34rdqkYrgOUoJmjkWftvCx+Xk6b/XrWk+J7UT9EBRM7I7vVzM3aBNj4nuDg0h1l5Dgc18SJ9RtXfn1Xv8tG9TVMrCngg4g4P0bliQd2gJomOP5/ohx9oWS6fSttOo7EocYKN9F9LhRU9CHGj5DMU/l1sfrEF5MaThEhyygwdUeeu8YQU/RNR/quEkhe+9IT2K8OJnvNBOGLpGDSRkUkAzyqsOp5hvKtd1ACTPxdMn0cxTB5JftjhXr55D41U11PN2RwsWB1taIOwnpdGic+fmzhTEcc3MIe8TjsRxI9Misx0domwoudzCzp3+oeAsKq76mkbEjloGu1kd4ptEKpkVon0OGCQjHZOYK1cuFCGDEuahIckP9KXSTBRvdsdXfqi/btFeoMAABPz3O6z3zuVSadVt9eEZkRsgAev+Xu2Ki+FI4ICJ62C6jabDaoIloW4rO1CwGtEYVV6/KG800ZqJgaPrzOVgB3Irg0P6X8hj1Hr3NawIdKvnzuXmyihljz/g9GWOKerHY6sSgS0feEznj6ufOO2Qls7tPjKRiInwGW/ThWNsR6g3UuD3dHVRpOjhupAPhPeNnbpmrVE7GkWdcxlKkPyNozUblM5Bq0+1fbKOwMUgnSvA0ZxJlTdcf+9FVsx9ycO4fP6rw1gapoHMf5H7h7AXZ0oelkT4Pfb1QmwU8KwEf775vnGl74wSUJ+SDnUo5/osH2PtlnKaHvLGjm5J1YtEEJODpS1Bqjay8VUbKL5rGEQiIeQjV2xJM0Np0yi17vkih9HaWfOHoi23zIhs6bLweM4Sdu1Jp/nG3Z4SY/HurOf2EoIj49zBBPSMxKxMeLZRjsB02OaK+QpilYzHJqhKvgGFLqFhHsKUUXIVzL/nvk6rlgLrqRlPbtAhvrlp1+WfOhOztWlyEBR1b217qzMx2WbD7ssc9X5CAp8fYE/T29qkMNTzioJogFIsssqL8ycj24Vq+ZZ6Pka6Bzash8D/3QbYPatH1KKQFDFQ1m9//OCtRX1gI2CwCtFfdC38nNS7mrNgiYh89DMGZh73nZ1mB0HbBeRIiQBsrRPbsTdTZm7zABKp/fvFSsF3FC5A//ZC8s2kpt57xJAVzORlll4MgDxoJZEqjGQzKdSonwvk9/hSH+QOszFVBdPc+DcRsKF8zfsGHTe45uLGk13MyFp3wamKRz62FvoKQpCNC6S","layer_level":0},{"id":"04d450ca-6883-415c-9a59-cca745950482","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"系统工作流程","description":"system-workflow","prompt":"开发系统工作流程的详细文档，描绘从程序启动到结果输出的完整执行路径。以IntelliAirCondition的main方法为起点，分阶段说明：1) 训练阶段：DataCollecter如何从文本文件收集数据，TrainDataSetManager如何存储数据，PtTrainer如何训练模型生成PtFitFunc集合，并通过DataFactory注册；2) 调度阶段：如何使用线程池并行执行三种任务——基于用户期望温度的基准方案、标准PSO调度、混沌PSO调度，以及PowerScheduler如何生成PowerVector；3) 展示阶段：ResultDisplayer如何从DataFactory获取所有EvaluteResult并输出。强调DataFactory作为全局数据中枢的角色，管理用户、传感器、函数、结果等所有数据的生命周期。使用流程图辅助说明数据在各模块间的流动。","parent_id":"","order":6,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/IntelliAirCondition.java,src/main/java/com/leavesfly/iac/datasource/DataFactory.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:09:28.953482+08:00","gmt_modified":"2025-09-23T18:17:26.321667+08:00","raw_data":"WikiEncrypted:gWB8HBj+8+/15rQhXgtMjOoV1DlnxhtaegJiN2U4cm+6NECOMWLHD1GfKxkJ0hnM2e35EaCzypQHUFOSqo9diBi8Lxx6FB219IfmxeJUiHykuyzfpXRC85e1Gu20QNefc/AWMct0LmXB5Wj8W4jE3HoixNc2HDV3BZ0DFvZBbIRLD22NDK3NmYvmcJ8oUY3jxq4HxdH5aH5aikZsanrFWwh8t35FUJpdUrkt1Dew2+7UrxCPLjl6/rHx6njismejFv3RfnoxUOjYacJk5NHBujbFDcZV/lMkvL2Nzej4NLb9uQicGtz9ZxBzO9u1frqHLTu1ZKI9ITDVMQdetc3tBqAL8hnUAAGGv73CuHIqKZMduvn5l6mvPcFaKb5D9rsll/VkKcZi825ThtYJxEMNkbAF7hu83mCDmWFaeCs0+sUk+J9fukyXBHcb7fora76nL6zPfs9fcmDCClVoLxAXHH9s0L2bnSuXrRFqHFqILYO9YVoCedsiwfO2Vtuo8oKPijIT+4vv0kC0K1Jd4FeDbDpHyi2sy1yGoTfoRgpC71vAmKzn/cbc87+KevJI++fpSlarFgk4+JTm/kvVu2Ub6dB8KtrVqEd73RcLnKSLtQiVOsso1vkkxvUHKhd9BF3gTXvJrkZUdzi74ZIekIabRRZBU+GQm8Z3T5n4H1Y5X6WGwy9TKs/dT75SvSt0CvR696u9d+duZKJpaZhP0VyqqocRM8TVrfvT5AUXuUDoUISein44NWdl5446WwSKRFidCdPe6/+f8ANjX/asacUAD9o6etsYLzB/TEte1uQ2QVv2/8Pht9CYhUP2W2jSG/rS4Jd+JvavP5qmnAmjlMd9saJpGflpoMakTvI9WDQSjvdhpfL9mCYRUy/hecpBwlCEIHV3TMvI3n1jzIR03zBAMDR3AcUb443NlkTGACg+wVyY0iURzEJTzpIil+Io7VJCHDSTj7/5pJ6dZ9sF2g9w82rkAuohq4jAgCN9/Q0vMVKxEPzxxD2Ws8RVhiuzvfeg219I4DInPlpXZkwJGsUXHSL+YVSGv4FTjCFYSrmnHXELNNtTH7nTxe5zWS5xz1T476xMoftrC6lP0bHOZ8i7wmkKNhSpW1RW1UWFppgrtk0XSoFc4qHMmpHiQ8iClxKFWMtdv9BxeODmK3nDd+4QB+ixtCx4yT/mSZxhWP+jvFLovbE3ZYf+FAxpUsDOMfDWtnsXZJ7RncoFYpAci1lSjQdtgfAlTzM+4Z/OlHzc2T2KSpwSK+oe7pzPjnMw4+D6DxJDost33jU6Bh0pL94GCjW7QRo8RK3PM1ty+pABU9Qy2bNgDg4mIKkSwqLQ8xgryUouRAGA167m727HZD3ETosvcJHULbEdDmiFU9i9BXM4O4NuDW8UWkO0Ph8j8n9BodadonmhOsLY2hfsWAwrkHFVDMHr0Vr0DtNrsgvlqirh/8GQmD3muNBkRDa25u+BxH+fp40vFy8pkJqJlwKd+XZu0B5o4xJEV1E2tShTlQkmLl6taZUKNmiu3FLiTx5Um+jykxLuYQHnCjiVsJhAAymhhpALTsBPzRRktlAqnsF4jqdCO7MVZcuhrnHwztteQ4UWTYpYgOcqSYtQOJ7btUyl57RjgD66umJrAlz3IZI=","layer_level":0},{"id":"f058903b-d1d5-462f-8cd0-ba72942a5e2d","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"扩展与定制","description":"extension-points","prompt":"创建扩展与定制指南，指导开发者如何增强系统功能。说明如何通过实现PtTrainer接口并注册新的TrainModel来添加新的机器学习模型（如随机森林、SVM）。阐述如何通过实现PowerScheduler接口来集成新的优化算法（如遗传算法、模拟退火）。解释如何扩展Evaluator类以支持新的评估指标（如碳排放量、设备磨损度）。提供具体的代码示例，展示如何编写一个新的调度器或训练器，并将其集成到主流程中。同时，说明如何通过修改配置常量类或资源文件来自定义系统行为。为高级用户提供关于线程安全、性能优化和模块解耦的建议。","parent_id":"","order":7,"progress_status":"completed","dependent_files":"src/main/java/com/leavesfly/iac/train/PtTrainer.java,src/main/java/com/leavesfly/iac/execute/PowerScheduler.java,src/main/java/com/leavesfly/iac/evalute/Evaluator.java","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:09:28.953859+08:00","gmt_modified":"2025-09-23T18:17:07.972199+08:00","raw_data":"WikiEncrypted:9tFZPEMPWdLFkkE2XbXYMstanl4SyjwXhMUMw1lQtKyq066NuH8DHqWTfvyD3s7fVQYmy0dTDaGBvDxoexZrY7BJIXoT0N9C+BoOp7YxZTAsn67onSNYLWXpV5JokowPL+45FPzany/U9ep3WhkkLWtOSAVC01cyerYVi5jkAw9nqVrPbcdTtpOynRFLfPoDYpPsCZ2vMEi98WTyqARtY15ibhW1U1+8gy4APfJuh7Pp5tAmwOdCttV3wg5tb5heokhp74mtPPrVhYMZTFVFC2VojJmzKOIoQL+iXnIjNFZd4ty2QrF4ccURG3S/xZUxVLlEXpEOcnwEkznlH5tDYR2Q8mgrTVApuxLAknmsQ2K5kLmZLvVwA1WYKsoiWDLpSe5kPinjigoTv9vzJAOsMhgthrlR3lIdobokWoI5rOVr8gDVn5Es1tZaL616S2nolea0as6XfUjjaI+Xa2hsooyPhX/bwfq0zDGqkHGiSgCOZDD6SeVCDuf1eLOLJGJEfr+Hk0RZ3FoZBoN8ColQE3aTbVzyyKCskAu+IdjdyUJop+DvPDsoxYAso/3aHRp8NTcIh75ydmtuFBErvcq5RHRCaKmTeQGNQ03VAyS3xXJkGf+6CPBiJmYzXGrGnHbcX3U1bA5GK3l9u1vHCENkYBKn6yhzVEsYqKFFecM5pBE63jZndDHv/4LcmbeA2+fNypW/4KQGFq6XJkieCB9kPa9ER+0JBYbzmYnX4Ud6LA8ydwtMJzezNfWuVHG1AF7zxiw5MzGowOGLO660vGHSmACXPxCH4P8Oea2oLH1ts7y6GULxGjD/cWRvopyG+1ZQjuQQo3Ixm9UHpI9mhdctaORLrX81z4kyEK8KYmsnrWpTr/wANvUFUlOhPy5OAEyOZwHSwU5r2Z7O8v4Tbi34asSY6b84Is8g9lc32xscdgX4s7HyGYcD0W6JA66cVJbg5Pd8Vbc4MzdVQSzR1cIYaMdciAyhAHaVGdfkmleGlu3Kt90xhhn/uuiPBUE3U+Rk3Ybm9rwxqGpPudp/hEVaHRrZBPvUafsHZtMaPsJu6tSP6kNdFlLIsDkKhgHRkZjx5PtUDiCcptYmFJDVWHFyrXchPhX8pRcy631X+Jakt02IRS//Dt/L91ajqt2UqQvL5J8yesH6xG3HfQbyhBNywAWPJ4KSDfpLtfTc/6v63uBYljUf90zYGGRlg9fLaTlDFNLu/Svj0x/BIR+UqxluPiXkIoWo9tjcnAIFDCd7NswJDbOVWQ79LIgZCwKUB1bCfttBi5qAyZT80ge3qf2PN+XFs4ITHBoCT1Jlu82ZC91jABf7k4crGGEsnMcVK+2EVAmiHdZUabQftThkHjpR5J9vWItADK+LK8IaC7O2reCgE+VIt7HIPceJGdhhT2wwK8ijPqGGNiUcbf47tt8ZlfcKe/+SboXXyRPSVsJguooNX3mmCS9kMPwzRlSwsuBa38X7g+A95GIxr3NkbpvajNmQ1DyZkDQ4DNVkk83TqKyao03AThDjyiGRginPf3sIwyW/mzZOWngtwpJLmLMSsoBdxLMuyPGGSFq8gBYly/g=","layer_level":0},{"id":"fd7ab5e2-dceb-4c41-afb8-2763806a2232","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"开发计划","description":"development-plan","prompt":"整理并呈现项目的开发计划文档，总结当前已完成的功能模块和未来的发展路线图。根据'开发计划.txt'文件内容，列出已实现的核心功能，如基础PSO调度、BP神经网络训练、结果评估等。概述未来计划增加的功能，例如支持更多类型的机器学习模型、引入更复杂的用户舒适度模型、实现Web可视化界面、支持实时数据流处理等。为用户和贡献者提供项目演进的清晰视图，帮助他们理解项目的长期方向和潜在的贡献机会。","parent_id":"","order":8,"progress_status":"completed","dependent_files":"开发计划.txt","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:09:28.954969+08:00","gmt_modified":"2025-09-23T18:18:31.404415+08:00","raw_data":"WikiEncrypted:F3QgleoEfoy16cQggYe9C/iO0UDcjTk1FZ/7JYSivv2WQ4bp/P0LfbFoMIojkPUuWNX5Bm8Y5dYMMQyu6PSHmCyAqsMntLUQsBxJd70QdjqYMIMTMkBKspyTKpJVO9bhoeEnK3WoLfKNcipc29RpCNJTwlB9bkcloB+xDEgagzkkkLvX8oK614SIR9RiJ9oPza7XLmoC0MBo2FI8Vfy57SYSGI2VEMaS4ijUkuloLH4ppQ7+O0W0y5wA1s9WwRyciwf+6K2KWnAEStxjFVl6TKJvtkFwOA7emf4aOQVcMi2iZWEPKzuy/V8HHG35Hxh/WIrhLqxqfwgiOfOphP1fVbFDj3q5PdWAGiXPvpjjvJH9EnsUrUXc3eAueD/7jv6jRD2JHefPw2MY802Uw/R932LqZo+/axrRJn3XVw6zWZPDrl7V8E69YwVK6LCl8ih/u1ACQv4WYPo4t/yjOgWIj2yE/FIlay9NTe8agWvF+tjjINX3eyIStSa5zy8LKd29hGOH/+QxOimPIWuQyJrhVwL4Ti2BNY4eLplGwPy/X+dG7h/A1EiKuhmlW73Vm+LK3O2C6aifIlxXJ0sSCAgF+uMGfcKWueB3e8l9NgQTBCtPnYoCx36uHmJAiMCHCTAVJJ50g0+Nh+P/Gdxl4iaom+XLd0zHo3XBrBS52vTbzOwa7rM4e9aAYoygVdTlo/EL2PAJmtfJv4lUueO0mvGHTEE0So2srCmTV0jwZf+Jeumic6JpWQ5v0wq2lUQVo6EnraoK+M+ijVQRcEEaVlv11aiKlow3iDGbSuNlXj2JyPX5Lpb2nsIclfp5mUNEZv6SD4quJC3VBwgaAhOHMPPklfkidiFEAOauLpTcLCGHoytc7MtbJZnq9yIQQdDYg/GUjUgKxHDQcGyZurs6KWYoKUOeBq3+K2J9uEBKN/1qNTKktwEELSdnniBnYyw8Vw9wzeGhD6XGyQKuTAW2K7hx6RJr3PkNMT8eN/Af1ipxHPo8WcPsVe320gXg4UQ6akF4dPhLqM877+EYz+xvOyZbsVPfNlzlAjxaFxXMOlOfo50=","layer_level":0},{"id":"ecf8fdb0-8392-431b-b395-efb7fe6dae99","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","name":"附录","description":"appendix","prompt":"创建附录文档，提供补充参考资料。整理'仿真实验结果.txt'中的关键数据和结论，以表格或图表形式展示不同调度算法（如用户期望、标准PSO、混沌PSO）在满意度、功耗成本和功率效用方面的对比结果，帮助用户理解系统性能。归纳'约束.txt'中列出的所有系统限制和假设条件，例如地理分布模型、功率线性叠加假设、用户舒适度函数的静态性等。这些信息对于正确理解和使用仿真结果至关重要，能帮助用户识别模型的适用边界和潜在改进方向。","parent_id":"","order":9,"progress_status":"completed","dependent_files":"仿真实验结果.txt,约束.txt","keywords":"","workspace_path":"","gmt_create":"2025-09-23T18:09:28.955478+08:00","gmt_modified":"2025-09-23T18:18:22.391317+08:00","raw_data":"WikiEncrypted:oXFVdwVYdtK9JMQUocGTlyjDCilxkw4PGxCXaxjwYlUvHcG+elI7U+qfPm1rQNsAZoOQKWWpUtwdsfHk/MGPQXiwPKvGFqOaKrhH7wt8ksfCsCTOnqgvY8zi+1mwx6VsAiepmnAI7Yl4xoRmu/zrNpCp8JnxXdb8cIubtuo1PPcrQE+iNVbw3pL0YZcPDEceKuoKmihv9ytLPqIfwAde2qUYjYiGWerb7j1zkKOsvTkL7Ors4EYTW2CHh8DHd771mCnJSYavB4QWbWjqFsVAIfowLHV9Zb7oH9UeHzseqHDCqJzUeTTPizqPTKQZQKLsypkTShnFYqDsHUpBGLoOwICmBU7KqTVN9Mv2JGRpwsuIM+bFpMYX9uXB17sAyudtP+LuTB6Wvg8f1SYZ9rxYhqrux84fVcsxh4q4ypCYfxR5LgtXINe5tHT2afiwU+bQJcaAauM75oSjpgEbe/DjmefwE8fzDHQFdFiMs5c/Vo+fwX8adcg1bdZ/YFSEvvbrG6UE0m7SmdWHS8luhkXH9/V2ZJ8lPQxSBD0ldW0CDVGndpxpukFnba+E/G/EoxM+1+pv/CM7hu2ekfWhpZu6+MqzM8YysVfeM0zx4xfpejSytJnOHyIZvBlaL1Zwrj8bYPnhdWH+VXYXIqzQGyJ/JAQor0LUT5nA0K222KV1mL0X02VROaaCZWs8PsfC3I33w3oN0LfpnF2dyKB6kQ7Oj0P6nHcPyDrvXkoCxKH1zozoBrFaOeJjznPoS5f1ZWlmi78qU9mKHwx/B7ILNqUoSNtnpg4unYU6QyC7m7tPojeN8B/rHwyhYprq6H8o9b6xYTExHuKMBNX6t3u8xSyBWeZiKfDJUP/376uWwyqzIWn9M/XGsyXP3CQo7l/0SJ4Z8UWzPlRgTMYT/8hR3T2BmqboyrrVN/pMVzioJdHcjtbAa3t6dxxOnbOiL0y/IOqt6EOM/XY2wX1Q063aIhUjIStJ53usI7U1WnHjsWzG8sNLFsibA4srxlPs3YBWlIQAjoaA3v4627Jo48fubgshWe1cBgA6FAO9EJ4DgDlLTfPJiyazN5V0bPOx3RKajTYF+yeha4PesaLB9NtBopp3aDi/2kM4VlCUeJXW1sfwHPZU7MMItSj4jO1H8mD8v6vhiOdl2xwo1fH4HTT9o4eK+YYSLKb786nt4IcqO+vP9qNEdoG7R63owEAF789gfXgo","layer_level":0}],"wiki_items":[{"catalog_id":"da10e1b6-5223-4898-b33f-3471821e12a7","content":"","title":"快速开始","description":"getting-started","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"70efbfd6-7566-4805-95e0-f8b5c48497b4","gmt_create":"2025-09-23T18:12:38.593752+08:00","gmt_modified":"2025-09-23T18:12:38.601442+08:00"},{"catalog_id":"acfa451c-fcf7-4d4e-a1f6-174ed41b9230","content":"","title":"项目概述","description":"project-overview","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"d1ad624c-a5b7-4776-b37f-caf295e017aa","gmt_create":"2025-09-23T18:12:39.238794+08:00","gmt_modified":"2025-09-23T18:12:39.243933+08:00"},{"catalog_id":"15db76d2-4cd7-4f9a-b9be-2a75461d51f9","content":"","title":"技术栈与依赖","description":"technology-stack","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"e0ab46fb-c93d-4ed8-80b9-82b1ebd36cdc","gmt_create":"2025-09-23T18:13:41.387017+08:00","gmt_modified":"2025-09-23T18:13:41.396765+08:00"},{"catalog_id":"0ec268dd-b05d-4843-8672-e1700ac7b2f6","content":"","title":"核心模块详解","description":"core-modules","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"535eb666-ebcd-4ba5-acce-b163e70f93bc","gmt_create":"2025-09-23T18:14:02.71543+08:00","gmt_modified":"2025-09-23T18:14:02.730762+08:00"},{"catalog_id":"a2b6115f-c729-436b-96b9-5e2153f96a70","content":"","title":"数据模型","description":"data-models","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"d15ea3fa-f3f9-45a3-aad9-963fc9a2b78a","gmt_create":"2025-09-23T18:15:35.651315+08:00","gmt_modified":"2025-09-23T18:15:35.65698+08:00"},{"catalog_id":"f19da748-27d0-49a5-8591-9fa53f411bb2","content":"","title":"配置说明","description":"configuration","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"976eed39-7358-4f4f-8844-b25950402d6b","gmt_create":"2025-09-23T18:15:44.453199+08:00","gmt_modified":"2025-09-23T18:15:44.457743+08:00"},{"catalog_id":"f058903b-d1d5-462f-8cd0-ba72942a5e2d","content":"","title":"扩展与定制","description":"extension-points","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"494ec987-bd4e-492d-ab9f-1926c2add731","gmt_create":"2025-09-23T18:17:07.964311+08:00","gmt_modified":"2025-09-23T18:17:07.972867+08:00"},{"catalog_id":"04d450ca-6883-415c-9a59-cca745950482","content":"","title":"系统工作流程","description":"system-workflow","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"4478e535-692e-44fb-a66e-91db0f13f388","gmt_create":"2025-09-23T18:17:26.320319+08:00","gmt_modified":"2025-09-23T18:17:26.321844+08:00"},{"catalog_id":"ecf8fdb0-8392-431b-b395-efb7fe6dae99","content":"","title":"附录","description":"appendix","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"a7505f7c-04a8-411f-9b63-6b2c289481e2","gmt_create":"2025-09-23T18:18:22.389173+08:00","gmt_modified":"2025-09-23T18:18:22.39159+08:00"},{"catalog_id":"fd7ab5e2-dceb-4c41-afb8-2763806a2232","content":"","title":"开发计划","description":"development-plan","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"35bab117-c18d-4b42-9284-5191e0e36b02","gmt_create":"2025-09-23T18:18:31.399103+08:00","gmt_modified":"2025-09-23T18:18:31.404793+08:00"},{"catalog_id":"99e671a1-2349-49ee-a8d9-5c00a13c6a68","content":"","title":"训练模块","description":"training-module","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"651196e7-1cdd-43cd-9da3-b59a58810957","gmt_create":"2025-09-23T18:19:37.805424+08:00","gmt_modified":"2025-09-23T18:19:37.812328+08:00"},{"catalog_id":"f94db6f3-256a-4184-b208-ab2dae03811d","content":"","title":"应用上下文配置","description":"app_context_config","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"6c58de01-a415-4504-b669-764e847903a0","gmt_create":"2025-09-23T18:19:42.418607+08:00","gmt_modified":"2025-09-23T18:19:42.423806+08:00"},{"catalog_id":"7f8ab40a-e31e-4dfc-a283-8213fc711e47","content":"","title":"PowerVector","description":"power-vector","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"ece7b0a9-8bac-490e-882c-f6708aebba51","gmt_create":"2025-09-23T18:20:39.179745+08:00","gmt_modified":"2025-09-23T18:20:39.184076+08:00"},{"catalog_id":"801711a1-e658-44d9-bd4a-76ba5da470aa","content":"","title":"PSO算法配置","description":"pso_algorithm_config","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"bf5db87d-9b47-4de3-8a53-f9d7fc54d536","gmt_create":"2025-09-23T18:21:19.145904+08:00","gmt_modified":"2025-09-23T18:21:19.153281+08:00"},{"catalog_id":"c067988e-9ede-4e6b-8e35-966cdac55ce2","content":"","title":"执行模块","description":"execution-module","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"4ab5185c-ec5e-450f-b61d-4f861113ad26","gmt_create":"2025-09-23T18:21:58.219483+08:00","gmt_modified":"2025-09-23T18:21:58.22465+08:00"},{"catalog_id":"5397802f-2131-49dc-bc75-947ce0d99f8a","content":"","title":"PtFitFunc","description":"pt-fit-func","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"428b387d-a87d-4210-8256-c13203deebe0","gmt_create":"2025-09-23T18:22:08.01114+08:00","gmt_modified":"2025-09-23T18:22:08.016843+08:00"},{"catalog_id":"6df373bb-a314-41ac-aa80-67fe50be174a","content":"","title":"BP神经网络配置","description":"bp_algorithm_config","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"099a0c24-2dce-4a4f-be85-a3f87265d69f","gmt_create":"2025-09-23T18:22:59.674266+08:00","gmt_modified":"2025-09-23T18:22:59.697113+08:00"},{"catalog_id":"741f286f-7be3-404e-8653-47f8d4774e22","content":"","title":"评估模块","description":"evaluation-module","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"8db294c9-b007-4d44-aea1-9cfc3cebf353","gmt_create":"2025-09-23T18:23:04.171508+08:00","gmt_modified":"2025-09-23T18:23:04.18136+08:00"},{"catalog_id":"32f0e66d-c8fc-4cf0-a4f9-bfce36842a27","content":"","title":"显示模块","description":"display-module","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"4989d826-7873-4c94-905a-aef62b629798","gmt_create":"2025-09-23T18:24:19.241066+08:00","gmt_modified":"2025-09-23T18:24:19.266318+08:00"},{"catalog_id":"c632d378-cf8f-4bb2-ab88-93895973b9d2","content":"","title":"Solution","description":"solution","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"2110d804-2df6-45f9-ae68-dc558cfc18ad","gmt_create":"2025-09-23T18:24:36.630547+08:00","gmt_modified":"2025-09-23T18:24:36.635131+08:00"},{"catalog_id":"8aa51335-1878-4373-ae8e-9007022c452f","content":"","title":"EvaluteResult","description":"evaluate-result","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"d30964cd-5211-4ee1-b229-ab7345347dd4","gmt_create":"2025-09-23T18:25:20.276817+08:00","gmt_modified":"2025-09-23T18:25:20.284208+08:00"},{"catalog_id":"23ec0fd5-1ec9-4edc-a92c-63953001f6ad","content":"","title":"GeoPoint","description":"geo-point","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"4fdd7c62-2260-464b-8112-2bee4b12467f","gmt_create":"2025-09-23T18:25:38.455157+08:00","gmt_modified":"2025-09-23T18:25:38.461094+08:00"},{"catalog_id":"8d6c4a38-46da-4d20-8198-c2138470bbac","content":"","title":"数据收集","description":"data-collection","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"db04fba3-f7ec-4ede-8124-75be4d0765d4","gmt_create":"2025-09-23T18:26:28.65985+08:00","gmt_modified":"2025-09-23T18:26:28.665174+08:00"},{"catalog_id":"4a0b0d4c-7745-4bd4-9751-a9a3ba78e74c","content":"","title":"PSO算法实现","description":"pso-algorithm-implementation","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"dabd0af7-ee0c-46e1-b419-f528934110a9","gmt_create":"2025-09-23T18:26:42.046593+08:00","gmt_modified":"2025-09-23T18:26:42.050819+08:00"},{"catalog_id":"c1b6cc88-4296-4325-9fae-bc10127a3ed1","content":"","title":"模型训练","description":"model-training","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"49bfc293-9c86-41ff-ad1c-dc0a4ae84363","gmt_create":"2025-09-23T18:27:33.449153+08:00","gmt_modified":"2025-09-23T18:27:33.479378+08:00"},{"catalog_id":"bff3ec64-b656-4ea2-a82d-c496a13b1523","content":"","title":"调度器设计","description":"scheduler-design","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"3f8cc628-b519-4549-a7ff-e7ee92b4cb5d","gmt_create":"2025-09-23T18:27:47.64972+08:00","gmt_modified":"2025-09-23T18:27:47.657219+08:00"},{"catalog_id":"d523bf51-6334-4043-a072-d61da553292f","content":"","title":"存储管理","description":"storage-management","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"ac212019-e03d-42bd-8d4b-2389d24fd6a0","gmt_create":"2025-09-23T18:28:29.496578+08:00","gmt_modified":"2025-09-23T18:28:29.501937+08:00"},{"catalog_id":"eaf18589-0cc0-45b2-98b4-239c39cfce3e","content":"","title":"用户舒适度模型","description":"user-comfort-model","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"d913dbbe-a272-4e3c-af63-e264b64f15d5","gmt_create":"2025-09-23T18:28:49.41869+08:00","gmt_modified":"2025-09-23T18:28:49.464494+08:00"},{"catalog_id":"3e751911-1458-4648-82a1-10ebf9c00858","content":"","title":"BP神经网络模型","description":"bpnn-model","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"e01742c1-b5c5-4b69-ae79-58d2ba52bc44","gmt_create":"2025-09-23T18:29:24.511397+08:00","gmt_modified":"2025-09-23T18:29:24.517136+08:00"},{"catalog_id":"bbb3be69-05ad-406d-a88d-61ecb1bfc3c8","content":"","title":"线性回归模型","description":"linear-regression-model","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"cfb81756-6907-49e5-b0a6-e8d29638fc38","gmt_create":"2025-09-23T18:29:38.3007+08:00","gmt_modified":"2025-09-23T18:29:38.306577+08:00"},{"catalog_id":"b89dd605-cdb7-46d9-9acd-e305ce9b74d6","content":"","title":"训练任务执行机制","description":"training-task-execution","extend":"{}","progress_status":"completed","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","id":"d23f5ca5-9f53-487c-a7d5-ebf788ba02b9","gmt_create":"2025-09-23T18:30:32.865383+08:00","gmt_modified":"2025-09-23T18:30:32.885128+08:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# 智能空调仿真平台项目分析\n\n## 1. 项目介绍\n\n### 项目目的\n智能空调仿真平台是一个用于模拟和优化空调功率调度的系统，旨在通过机器学习和优化算法提高用户舒适度并降低能耗。系统通过历史数据训练温度预测模型，并使用粒子群优化（PSO）算法进行空调功率调度优化。\n\n### 核心目标\n- 基于历史数据训练功率-温度预测模型\n- 实现多种空调功率调度算法（标准PSO、混沌PSO等）\n- 评估不同调度方案的用户满意度和用电成本\n- 提供可视化结果展示\n\n### 目标用户\n- 智能楼宇管理系统开发者\n- 能源优化研究人员\n- HVAC系统设计工程师\n- 智能家居技术团队\n\n## 2. 技术架构\n\n### 组件分解\n项目采用模块化设计，主要包含以下核心组件：\n- **数据源模块**：负责数据加载和管理\n- **训练模块**：负责模型训练和预测函数构建\n- **执行模块**：负责功率调度算法实现\n- **评估模块**：负责调度方案评估\n- **显示模块**：负责结果展示\n\n### 设计模式\n- **单例模式**：`DataFactory`类确保全局数据访问的一致性\n- **策略模式**：通过`PtTrainer`接口支持多种训练模型（BP神经网络、线性回归等）\n- **工厂模式**：`SolutionBuilder`负责创建不同类型的解决方案\n- **并行计算**：使用线程池实现多任务并行执行\n\n### 系统关系与数据流\n\n```mermaid\nflowchart TD\n    A[主程序入口] --\u003e B[训练阶段]\n    B --\u003e C[数据收集]\n    C --\u003e D[模型训练]\n    D --\u003e E[预测函数注册]\n    E --\u003e F[调度阶段]\n    F --\u003e G[PSO算法调度]\n    G --\u003e H[混沌PSO算法调度]\n    H --\u003e I[用户期望温度评估]\n    I --\u003e J[评估阶段]\n    J --\u003e K[满意度计算]\n    K --\u003e L[成本计算]\n    L --\u003e M[展示阶段]\n    M --\u003e N[控制台输出]\n```\n\n## 3. 关键实现\n\n### 主入口点\nsrc/main/java/com/leavesfly/iac/IntelliAirCondition.java\n\n### 核心模块\n- **训练模块**：src/main/java/com/leavesfly/iac/train\n- **调度模块**：src/main/java/com/leavesfly/iac/execute/scheduler\n- **数据工厂**：src/main/java/com/leavesfly/iac/datasource/DataFactory.java\n- **评估器**：src/main/java/com/leavesfly/iac/evalute/Evaluator.java\n\n### 配置方法\n- **应用配置**：src/main/java/com/leavesfly/iac/config/AppContextConstant.java\n- **算法配置**：src/main/java/com/leavesfly/iac/config/PsoAlgorithmConstant.java\n\n### 外部依赖\n- **Weka**：用于机器学习模型训练\n- **Lucene**：用于数据存储和检索\n- **JFreeChart**：用于数据可视化\n- **Commons-lang**：提供常用工具方法\n\n### 集成点\n- **文件系统集成**：通过ResourceUtil读取配置文件\n- **多线程集成**：使用ExecutorService实现并行计算\n- **外部库集成**：集成Weka机器学习库\n\n### 组件关系图\n\n```mermaid\ngraph LR\n    A[IntelliAirCondition] --\u003e B[DataFactory]\n    A --\u003e C[PtTrainer]\n    A --\u003e D[PowerScheduler]\n    A --\u003e E[Evaluator]\n    B --\u003e F[User Data]\n    B --\u003e G[Sensor Data]\n    B --\u003e H[Power Data]\n    C --\u003e I[BP Neural Network]\n    C --\u003e J[Linear Regression]\n    D --\u003e K[PSO Algorithm]\n    D --\u003e L[Improved PSO]\n    E --\u003e M[Satisfaction]\n    E --\u003e N[Power Cost]\n```\n\n## 4. 关键特性\n\n### 功能概述\n- **多模型训练**：支持BP神经网络、Weka BP神经网络、线性回归等多种模型\n- **并行调度**：同时执行多种调度算法进行对比\n- **用户舒适度评估**：基于用户地理位置和舒适温度范围计算满意度\n- **成本效益分析**：综合考虑用户满意度和用电成本\n\n### 实现亮点\n- **多线程训练**：使用`PtMultiThreadTrainer`实现并行模型训练\n- **灵活的调度框架**：通过`PowerScheduler`接口支持多种调度算法\n- **动态权重计算**：结合满意度权重和功耗成本权重进行综合评估\n- **地理空间分析**：基于用户和传感器的地理位置计算影响范围\n\n### 特性架构图\n\n```mermaid\nstateDiagram-v2\n    [*] --\u003e 初始化\n    初始化 --\u003e 数据加载: 加载用户/传感器数据\n    数据加载 --\u003e 模型训练: 训练温度预测模型\n    模型训练 --\u003e 调度执行: 并行执行多种调度\n    调度执行 --\u003e 方案评估: 计算满意度和成本\n    方案评估 --\u003e 结果展示: 输出最优方案\n    结果展示 --\u003e [*]\n    \n    state 调度执行 {\n        [*] --\u003e PSO调度\n        [*] --\u003e 混沌PSO调度\n        [*] --\u003e 用户期望调度\n        PSO调度 --\u003e 方案评估\n        混沌PSO调度 --\u003e 方案评估\n        用户期望调度 --\u003e 方案评估\n    }\n```\n\nSources:\n- [IntelliAirCondition.java](src/main/java/com/leavesfly/iac/IntelliAirCondition.java)\n- [DataFactory.java](src/main/java/com/leavesfly/iac/datasource/DataFactory.java)\n- [PtTrainer.java](src/main/java/com/leavesfly/iac/train/PtTrainer.java)\n- [PowerScheduler.java](src/main/java/com/leavesfly/iac/execute/PowerScheduler.java)\n- [Evaluator.java](src/main/java/com/leavesfly/iac/evalute/Evaluator.java)\n- [PsoPowerScheduler.java](src/main/java/com/leavesfly/iac/execute/scheduler/PsoPowerScheduler.java)\n- [AppContextConstant.java](src/main/java/com/leavesfly/iac/config/AppContextConstant.java)\n- [PsoAlgorithmConstant.java](src/main/java/com/leavesfly/iac/config/PsoAlgorithmConstant.java)\n- [pom.xml](pom.xml)\n\u003c/blog\u003e","gmt_create":"2025-09-23T18:06:38.1603+08:00","gmt_modified":"2025-09-23T18:06:38.1603+08:00","id":"90db47ef-e338-4eb9-9c9a-1ac9a2abf196","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":""},"wiki_readme":{"content":"No readme file","gmt_create":"2025-09-23T18:05:40.895789+08:00","gmt_modified":"2025-09-23T18:05:40.895789+08:00","id":"86a4e47b-234b-48bc-b6f0-51434abcfceb","repo_id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":""},"wiki_repo":{"id":"dbd3d11f-3141-4115-81e3-d32878f11062","workspace_path":"","name":"intellacondition","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── src\\n│   ├── main\\n│   │   ├── java/com/leavesfly/iac\\n│   │   │   ├── config\\n│   │   │   │   ├── AppContextConstant.java\\n│   │   │   │   ├── BpAlgorithmConstant.java\\n│   │   │   │   └── PsoAlgorithmConstant.java\\n│   │   │   ├── datasource\\n│   │   │   │   ├── datagene\\n│   │   │   │   │   ├── demo\\n│   │   │   │   │   │   ├── BalanceUtil.java\\n│   │   │   │   │   │   ├── GenTestDataUtil.java\\n│   │   │   │   │   │   └── GenTestDataUtilB.java\\n│   │   │   │   │   ├── AirConditionUtil.java\\n│   │   │   │   │   ├── TempUtilityDistanceUtil.java\\n│   │   │   │   │   └── TrainDataGenerator.java\\n│   │   │   │   ├── DataFactory.java\\n│   │   │   │   ├── DomainParser.java\\n│   │   │   │   └── ResourceUtil.java\\n│   │   │   ├── display\\n│   │   │   │   ├── plot\\n│   │   │   │   │   ├── demo\\n│   │   │   │   │   │   ├── BarGui.java\\n│   │   │   │   │   │   ├── DualAxisDemo1.java\\n│   │   │   │   │   │   ├── FittingCurve.java\\n│   │   │   │   │   │   ├── XYSeriesDemo1.java\\n│   │   │   │   │   │   ├── XYSplineRendererDemo1.java\\n│   │   │   │   │   │   ├── XYSplineRendererDemo2.java\\n│   │   │   │   │   │   └── XyGui.java\\n│   │   │   │   │   └── CurvePainter.java\\n│   │   │   │   └── ResultDisplayer.java\\n│   │   │   ├── domain\\n│   │   │   │   ├── EnableClone.java\\n│   │   │   │   ├── GeoPoint.java\\n│   │   │   │   ├── PowerRange.java\\n│   │   │   │   ├── PowerValue.java\\n│   │   │   │   ├── PowerVector.java\\n│   │   │   │   ├── PtFitFunc.java\\n│   │   │   │   └── RangeValue.java\\n│   │   │   ├── evalute\\n│   │   │   │   ├── Evaluator.java\\n│   │   │   │   ├── EvaluteResult.java\\n│   │   │   │   ├── Solution.java\\n│   │   │   │   └── SolutionBuilder.java\\n│   │   │   ├── execute\\n│   │   │   │   ├── domain\\n│   │   │   │   │   ├── ContiUserComfortFunc.java\\n│   │   │   │   │   ├── UserComfortFunc.java\\n│   │   │   │   │   └── UserTempRange.java\\n│   │   │   │   ├── scheduler\\n│   │   │   │   │   ├── pso\\n│   │   │   │   │   │   ├── Particle.java\\n│   │   │   │   │   │   └── PsoAlgorithm.java\\n│   │   │   │   │   ├── EvaParticle.java\\n│   │   │   │   │   ├── PowerVectorParticle.java\\n│   │   │   │   │   ├── PsoPowerScheduler.java\\n│   │   │   │   │   └── PvImprovedParticle.java\\n│   │   │   │   └── PowerScheduler.java\\n│   │   │   ├── train\\n│   │   │   │   ├── collect\\n│   │   │   │   │   └── DataCollecter.java\\n│   │   │   │   ├── domain\\n│   │   │   │   │   ├── IntellacTrainDataItem.java\\n│   │   │   │   │   └── TrainDataItem.java\\n│   │   │   │   ├── store\\n│   │   │   │   │   ├── TrainDataSetManager.java\\n│   │   │   │   │   └── TrainDataSetManagerInLucene.java\\n│   │   │   │   ├── trainer\\n│   │   │   │   │   ├── bp\\n│   │   │   │   │   │   ├── BpTrianTask.java\\n│   │   │   │   │   │   ├── BpWekaModel.java\\n│   │   │   │   │   │   ├── BpWekaTrianTask.java\\n│   │   │   │   │   │   └── BpnnModel.java\\n│   │   │   │   │   ├── lr\\n│   │   │   │   │   │   ├── LineRegressModel.java\\n│   │   │   │   │   │   └── LrTrainTask.java\\n│   │   │   │   │   ├── ModelEnum.java\\n│   │   │   │   │   ├── PtMultiThreadTrainer.java\\n│   │   │   │   │   ├── TrainModel.java\\n│   │   │   │   │   └── TrainTask.java\\n│   │   │   │   └── PtTrainer.java\\n│   │   │   ├── util\\n│   │   │   │   ├── ArrayCloneUtil.java\\n│   │   │   │   ├── MathUtil.java\\n│   │   │   │   ├── NumberBoxUtil.java\\n│   │   │   │   └── SerializeUtil.java\\n│   │   │   └── IntelliAirCondition.java\\n│   │   └── resource\\n│   │       ├── air_condition_geo_table.txt\\n│   │       ├── power_temp_train_data.txt\\n│   │       ├── sensor_geo_table.txt\\n│   │       ├── user_comfort_temp.txt\\n│   │       └── user_geo_table.txt\\n│   └── test\\n│       ├── java/com/leavesfly/iac\\n│       │   └── AppTest.java\\n│       └── resource\\n│           ├── air_condition_geo_table.txt\\n│           ├── air_condition_power_range.txt\\n│           ├── power_temp_train_data.txt\\n│           ├── sensor_geo_table.txt\\n│           ├── user_comfort_temp.txt\\n│           └── user_geo_table.txt\\n├── README.md\\n├── pom.xml\\n├── 仿真实验结果.txt\\n├── 开发计划.txt\\n└── 约束.txt\\n\"","current_document_structure":"WikiEncrypted:","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"9737c3faa313c7feef9ed5798a2d7e3dd0354483","last_commit_update":"2025-09-08T16:50:16+08:00","gmt_create":"2025-09-23T18:05:37.963109+08:00","gmt_modified":"2025-09-23T18:30:33.03824+08:00","extend_info":"{\"language\":\"zh\",\"active\":true,\"branch\":\"master\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"\"}"}}